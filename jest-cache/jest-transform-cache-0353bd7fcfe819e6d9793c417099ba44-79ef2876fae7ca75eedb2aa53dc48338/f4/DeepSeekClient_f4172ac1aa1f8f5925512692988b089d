dd8713321e0180778e4e3e89a2960de7
"use strict";

/* istanbul ignore next */
function cov_1mq0bs07p() {
  var path = "C:\\Users\\hongping\\CascadeProjects\\json-sage-ai-agent\\src\\core\\deepseek\\DeepSeekClient.ts";
  var hash = "dd169fdcffc45c43bafec424b78008d5733be3dc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\hongping\\CascadeProjects\\json-sage-ai-agent\\src\\core\\deepseek\\DeepSeekClient.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 32
        }
      },
      "4": {
        start: {
          line: 7,
          column: 16
        },
        end: {
          line: 7,
          column: 49
        }
      },
      "5": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 29
        }
      },
      "6": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 60
        }
      },
      "7": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 19,
          column: 11
        }
      },
      "8": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 105
        }
      },
      "9": {
        start: {
          line: 21,
          column: 58
        },
        end: {
          line: 21,
          column: 66
        }
      },
      "10": {
        start: {
          line: 21,
          column: 77
        },
        end: {
          line: 21,
          column: 103
        }
      },
      "11": {
        start: {
          line: 28,
          column: 24
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "12": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "13": {
        start: {
          line: 35,
          column: 29
        },
        end: {
          line: 35,
          column: 81
        }
      },
      "14": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 33
        }
      },
      "15": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 45
        }
      },
      "16": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "17": {
        start: {
          line: 49,
          column: 27
        },
        end: {
          line: 49,
          column: 48
        }
      },
      "18": {
        start: {
          line: 50,
          column: 25
        },
        end: {
          line: 50,
          column: 44
        }
      },
      "19": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "20": {
        start: {
          line: 53,
          column: 20
        },
        end: {
          line: 53,
          column: 100
        }
      },
      "21": {
        start: {
          line: 55,
          column: 20
        },
        end: {
          line: 55,
          column: 97
        }
      },
      "22": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 57,
          column: 84
        }
      },
      "23": {
        start: {
          line: 59,
          column: 20
        },
        end: {
          line: 59,
          column: 161
        }
      },
      "24": {
        start: {
          line: 62,
          column: 13
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "25": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 105
        }
      },
      "26": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 55
        }
      },
      "27": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 82,
          column: 46
        }
      },
      "28": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 92,
          column: 93
        }
      },
      "29": {
        start: {
          line: 95,
          column: 0
        },
        end: {
          line: 95,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 24
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 46
          },
          end: {
            line: 21,
            column: 47
          }
        },
        loc: {
          start: {
            line: 21,
            column: 58
          },
          end: {
            line: 21,
            column: 66
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 68
          },
          end: {
            line: 21,
            column: 69
          }
        },
        loc: {
          start: {
            line: 21,
            column: 77
          },
          end: {
            line: 21,
            column: 103
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 40
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 26
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 45
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        loc: {
          start: {
            line: 74,
            column: 53
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 74
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        loc: {
          start: {
            line: 87,
            column: 36
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 87
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 11,
            column: 28
          },
          end: {
            line: 11,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 28
          },
          end: {
            line: 11,
            column: 40
          }
        }, {
          start: {
            line: 11,
            column: 44
          },
          end: {
            line: 11,
            column: 59
          }
        }],
        line: 11
      },
      "4": {
        loc: {
          start: {
            line: 13,
            column: 21
          },
          end: {
            line: 13,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 21
          },
          end: {
            line: 13,
            column: 38
          }
        }, {
          start: {
            line: 13,
            column: 42
          },
          end: {
            line: 13,
            column: 71
          }
        }],
        line: 13
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 19
          },
          end: {
            line: 30,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 19
          },
          end: {
            line: 30,
            column: 32
          }
        }, {
          start: {
            line: 30,
            column: 36
          },
          end: {
            line: 30,
            column: 53
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 31,
            column: 25
          },
          end: {
            line: 31,
            column: 152
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 31,
            column: 144
          },
          end: {
            line: 31,
            column: 146
          }
        }, {
          start: {
            line: 31,
            column: 149
          },
          end: {
            line: 31,
            column: 152
          }
        }],
        line: 31
      },
      "7": {
        loc: {
          start: {
            line: 31,
            column: 25
          },
          end: {
            line: 31,
            column: 141
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 25
          },
          end: {
            line: 31,
            column: 124
          }
        }, {
          start: {
            line: 31,
            column: 128
          },
          end: {
            line: 31,
            column: 141
          }
        }],
        line: 31
      },
      "8": {
        loc: {
          start: {
            line: 31,
            column: 31
          },
          end: {
            line: 31,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 31,
            column: 86
          },
          end: {
            line: 31,
            column: 88
          }
        }, {
          start: {
            line: 31,
            column: 91
          },
          end: {
            line: 31,
            column: 114
          }
        }],
        line: 31
      },
      "9": {
        loc: {
          start: {
            line: 31,
            column: 31
          },
          end: {
            line: 31,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 31
          },
          end: {
            line: 31,
            column: 66
          }
        }, {
          start: {
            line: 31,
            column: 70
          },
          end: {
            line: 31,
            column: 83
          }
        }],
        line: 31
      },
      "10": {
        loc: {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 149
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 140
          },
          end: {
            line: 32,
            column: 142
          }
        }, {
          start: {
            line: 32,
            column: 145
          },
          end: {
            line: 32,
            column: 149
          }
        }],
        line: 32
      },
      "11": {
        loc: {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 137
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 120
          }
        }, {
          start: {
            line: 32,
            column: 124
          },
          end: {
            line: 32,
            column: 137
          }
        }],
        line: 32
      },
      "12": {
        loc: {
          start: {
            line: 32,
            column: 30
          },
          end: {
            line: 32,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 84
          },
          end: {
            line: 32,
            column: 86
          }
        }, {
          start: {
            line: 32,
            column: 89
          },
          end: {
            line: 32,
            column: 110
          }
        }],
        line: 32
      },
      "13": {
        loc: {
          start: {
            line: 32,
            column: 30
          },
          end: {
            line: 32,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 30
          },
          end: {
            line: 32,
            column: 64
          }
        }, {
          start: {
            line: 32,
            column: 68
          },
          end: {
            line: 32,
            column: 81
          }
        }],
        line: 32
      },
      "14": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: 62,
            column: 13
          },
          end: {
            line: 69,
            column: 9
          }
        }],
        line: 47
      },
      "15": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 53,
            column: 100
          }
        }, {
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 55,
            column: 97
          }
        }, {
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 57,
            column: 84
          }
        }, {
          start: {
            line: 58,
            column: 16
          },
          end: {
            line: 59,
            column: 161
          }
        }],
        line: 51
      },
      "16": {
        loc: {
          start: {
            line: 59,
            column: 71
          },
          end: {
            line: 59,
            column: 157
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 72
          },
          end: {
            line: 59,
            column: 137
          }
        }, {
          start: {
            line: 59,
            column: 142
          },
          end: {
            line: 59,
            column: 157
          }
        }],
        line: 59
      },
      "17": {
        loc: {
          start: {
            line: 59,
            column: 72
          },
          end: {
            line: 59,
            column: 137
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 118
          },
          end: {
            line: 59,
            column: 124
          }
        }, {
          start: {
            line: 59,
            column: 127
          },
          end: {
            line: 59,
            column: 137
          }
        }],
        line: 59
      },
      "18": {
        loc: {
          start: {
            line: 59,
            column: 72
          },
          end: {
            line: 59,
            column: 115
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 72
          },
          end: {
            line: 59,
            column: 98
          }
        }, {
          start: {
            line: 59,
            column: 102
          },
          end: {
            line: 59,
            column: 115
          }
        }],
        line: 59
      },
      "19": {
        loc: {
          start: {
            line: 62,
            column: 13
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 13
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: 66,
            column: 13
          },
          end: {
            line: 69,
            column: 9
          }
        }],
        line: 62
      },
      "20": {
        loc: {
          start: {
            line: 74,
            column: 32
          },
          end: {
            line: 74,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 74,
            column: 41
          },
          end: {
            line: 74,
            column: 51
          }
        }],
        line: 74
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0]
    },
    inputSourceMap: {
      file: "C:\\Users\\hongping\\CascadeProjects\\json-sage-ai-agent\\src\\core\\deepseek\\DeepSeekClient.ts",
      mappings: ";;;;;;AAAA,kDAA6C;AAiC7C,MAAa,cAAc;IAIvB,YAAoB,MAAsB;QAAtB,WAAM,GAAN,MAAM,CAAgB;QACtC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,KAAK,IAAI,eAAe,CAAC;QACpD,IAAI,CAAC,MAAM,GAAG,eAAK,CAAC,MAAM,CAAC;YACvB,OAAO,EAAE,MAAM,CAAC,UAAU,IAAI,6BAA6B;YAC3D,OAAO,EAAE;gBACL,eAAe,EAAE,UAAU,MAAM,CAAC,MAAM,EAAE;gBAC1C,cAAc,EAAE,kBAAkB;aACrC;YACD,OAAO,EAAE,KAAK,CAAC,qBAAqB;SACvC,CAAC,CAAC;QAEH,8CAA8C;QAC9C,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CACjC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EACpB,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CACtC,CAAC;IACN,CAAC;IAED;;OAEG;IACI,KAAK,CAAC,oBAAoB,CAC7B,OAAkE;;QAElE,MAAM,OAAO,GAA0B;YACnC,GAAG,OAAO;YACV,KAAK,EAAE,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY;YACzC,WAAW,EAAE,MAAA,MAAA,OAAO,CAAC,WAAW,mCAAI,IAAI,CAAC,MAAM,CAAC,WAAW,mCAAI,GAAG;YAClE,UAAU,EAAE,MAAA,MAAA,OAAO,CAAC,UAAU,mCAAI,IAAI,CAAC,MAAM,CAAC,SAAS,mCAAI,IAAI;SAClE,CAAC;QAEF,IAAI;YACA,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CACnC,mBAAmB,EACnB,OAAO,CACV,CAAC;YACF,OAAO,QAAQ,CAAC,IAAI,CAAC;SACxB;QAAC,OAAO,KAAK,EAAE;YACZ,MAAM,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;SACpC;IACL,CAAC;IAED;;OAEG;IACK,cAAc,CAAC,KAAU;;QAC7B,IAAI,KAAK,CAAC,QAAQ,EAAE;YAChB,YAAY;YACZ,MAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC;YACrC,MAAM,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;YAEjC,QAAQ,MAAM,EAAE;gBACZ,KAAK,GAAG;oBACJ,MAAM,IAAI,KAAK,CAAC,8DAA8D,CAAC,CAAC;gBACpF,KAAK,GAAG;oBACJ,MAAM,IAAI,KAAK,CAAC,2DAA2D,CAAC,CAAC;gBACjF,KAAK,GAAG;oBACJ,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;gBACpE;oBACI,MAAM,IAAI,KAAK,CACX,uBAAuB,MAAM,MACzB,CAAA,MAAA,IAAI,CAAC,KAAK,0CAAE,OAAO,KAAI,eAC3B,EAAE,CACL,CAAC;aACT;SACJ;aAAM,IAAI,KAAK,CAAC,OAAO,EAAE;YACtB,SAAS;YACT,MAAM,IAAI,KAAK,CACX,2EAA2E,CAC9E,CAAC;SACL;aAAM;YACH,OAAO;YACP,MAAM,IAAI,KAAK,CAAC,UAAU,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;SAC9C;IACL,CAAC;IAED;;OAEG;IACI,MAAM,CAAC,oBAAoB,CAAC,SAAiB,UAAU;QAC1D,OAAO;;qBAEM,MAAM;;;;;6CAKkB,CAAC;IAC1C,CAAC;IAED;;OAEG;IACI,MAAM,CAAC,kBAAkB,CAAC,IAAY;QACzC,OAAO;;EAEb,IAAI;;4FAEsF,CAAC;IACzF,CAAC;CACJ;AAxGD,wCAwGC",
      names: [],
      sources: ["C:\\Users\\hongping\\CascadeProjects\\json-sage-ai-agent\\src\\core\\deepseek\\DeepSeekClient.ts"],
      sourcesContent: ["import axios, { AxiosInstance } from 'axios';\r\nimport { DeepSeekConfig } from '../config/ConfigManager';\r\n\r\nexport interface ChatMessage {\r\n    role: 'system' | 'user' | 'assistant';\r\n    content: string;\r\n}\r\n\r\nexport interface ChatCompletionRequest {\r\n    messages: ChatMessage[];\r\n    model?: string;\r\n    temperature?: number;\r\n    max_tokens?: number;\r\n    stream?: boolean;\r\n}\r\n\r\nexport interface ChatCompletionResponse {\r\n    id: string;\r\n    object: string;\r\n    created: number;\r\n    model: string;\r\n    choices: {\r\n        index: number;\r\n        message: ChatMessage;\r\n        finish_reason: string;\r\n    }[];\r\n    usage: {\r\n        prompt_tokens: number;\r\n        completion_tokens: number;\r\n        total_tokens: number;\r\n    };\r\n}\r\n\r\nexport class DeepSeekClient {\r\n    private client: AxiosInstance;\r\n    private defaultModel: string;\r\n\r\n    constructor(private config: DeepSeekConfig) {\r\n        this.defaultModel = config.model || 'deepseek-chat';\r\n        this.client = axios.create({\r\n            baseURL: config.apiBaseUrl || 'https://api.deepseek.com/v1',\r\n            headers: {\r\n                'Authorization': `Bearer ${config.apiKey}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            timeout: 30000 // 30 seconds timeout\r\n        });\r\n\r\n        // Add response interceptor for error handling\r\n        this.client.interceptors.response.use(\r\n            response => response,\r\n            error => this.handleApiError(error)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * \u521B\u5EFA\u804A\u5929\u5B8C\u6210\r\n     */\r\n    public async createChatCompletion(\r\n        request: Omit<ChatCompletionRequest, 'model'> & { model?: string }\r\n    ): Promise<ChatCompletionResponse> {\r\n        const payload: ChatCompletionRequest = {\r\n            ...request,\r\n            model: request.model || this.defaultModel,\r\n            temperature: request.temperature ?? this.config.temperature ?? 0.7,\r\n            max_tokens: request.max_tokens ?? this.config.maxTokens ?? 2000\r\n        };\r\n\r\n        try {\r\n            const response = await this.client.post<ChatCompletionResponse>(\r\n                '/chat/completions',\r\n                payload\r\n            );\r\n            return response.data;\r\n        } catch (error) {\r\n            throw this.handleApiError(error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u5904\u7406 API \u9519\u8BEF\r\n     */\r\n    private handleApiError(error: any): never {\r\n        if (error.response) {\r\n            // API \u54CD\u5E94\u7684\u9519\u8BEF\r\n            const status = error.response.status;\r\n            const data = error.response.data;\r\n            \r\n            switch (status) {\r\n                case 401:\r\n                    throw new Error('Invalid API key. Please check your DeepSeek API credentials.');\r\n                case 403:\r\n                    throw new Error('API key does not have permission to access this resource.');\r\n                case 429:\r\n                    throw new Error('Rate limit exceeded. Please try again later.');\r\n                default:\r\n                    throw new Error(\r\n                        `DeepSeek API error (${status}): ${\r\n                            data.error?.message || 'Unknown error'\r\n                        }`\r\n                    );\r\n            }\r\n        } else if (error.request) {\r\n            // \u8BF7\u6C42\u53D1\u9001\u5931\u8D25\r\n            throw new Error(\r\n                'Failed to connect to DeepSeek API. Please check your internet connection.'\r\n            );\r\n        } else {\r\n            // \u5176\u4ED6\u9519\u8BEF\r\n            throw new Error(`Error: ${error.message}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \u751F\u6210\u7CFB\u7EDF\u63D0\u793A\r\n     */\r\n    public static generateSystemPrompt(format: string = 'draft-07'): string {\r\n        return `You are a JSON Schema expert. Your task is to analyze JSON data and generate accurate JSON Schema definitions.\r\nPlease follow these guidelines:\r\n1. Use JSON Schema ${format} format\r\n2. Include detailed descriptions for each field\r\n3. Add appropriate examples where possible\r\n4. Infer proper types and formats\r\n5. Include validation rules when obvious from the data\r\n6. Keep the schema concise but comprehensive`;\r\n    }\r\n\r\n    /**\r\n     * \u751F\u6210\u7528\u6237\u63D0\u793A\r\n     */\r\n    public static generateUserPrompt(json: string): string {\r\n        return `Please generate a JSON Schema for the following JSON data. Include detailed descriptions and examples:\r\n\r\n${json}\r\n\r\nPlease provide only the JSON Schema as output, without any additional text or explanations.`;\r\n    }\r\n}\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dd169fdcffc45c43bafec424b78008d5733be3dc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1mq0bs07p = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1mq0bs07p();
var __importDefault =
/* istanbul ignore next */
(cov_1mq0bs07p().s[0]++,
/* istanbul ignore next */
(cov_1mq0bs07p().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1mq0bs07p().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1mq0bs07p().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1mq0bs07p().f[0]++;
  cov_1mq0bs07p().s[1]++;
  return /* istanbul ignore next */(cov_1mq0bs07p().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1mq0bs07p().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1mq0bs07p().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1mq0bs07p().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1mq0bs07p().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1mq0bs07p().s[3]++;
exports.DeepSeekClient = void 0;
const axios_1 =
/* istanbul ignore next */
(cov_1mq0bs07p().s[4]++, __importDefault(require("axios")));
class DeepSeekClient {
  constructor(config) {
    /* istanbul ignore next */
    cov_1mq0bs07p().f[1]++;
    cov_1mq0bs07p().s[5]++;
    this.config = config;
    /* istanbul ignore next */
    cov_1mq0bs07p().s[6]++;
    this.defaultModel =
    /* istanbul ignore next */
    (cov_1mq0bs07p().b[3][0]++, config.model) ||
    /* istanbul ignore next */
    (cov_1mq0bs07p().b[3][1]++, 'deepseek-chat');
    /* istanbul ignore next */
    cov_1mq0bs07p().s[7]++;
    this.client = axios_1.default.create({
      baseURL:
      /* istanbul ignore next */
      (cov_1mq0bs07p().b[4][0]++, config.apiBaseUrl) ||
      /* istanbul ignore next */
      (cov_1mq0bs07p().b[4][1]++, 'https://api.deepseek.com/v1'),
      headers: {
        'Authorization': `Bearer ${config.apiKey}`,
        'Content-Type': 'application/json'
      },
      timeout: 30000 // 30 seconds timeout
    });
    // Add response interceptor for error handling
    /* istanbul ignore next */
    cov_1mq0bs07p().s[8]++;
    this.client.interceptors.response.use(response => {
      /* istanbul ignore next */
      cov_1mq0bs07p().f[2]++;
      cov_1mq0bs07p().s[9]++;
      return response;
    }, error => {
      /* istanbul ignore next */
      cov_1mq0bs07p().f[3]++;
      cov_1mq0bs07p().s[10]++;
      return this.handleApiError(error);
    });
  }
  /**
   * 创建聊天完成
   */
  async createChatCompletion(request) {
    /* istanbul ignore next */
    cov_1mq0bs07p().f[4]++;
    var _a, _b, _c, _d;
    const payload =
    /* istanbul ignore next */
    (cov_1mq0bs07p().s[11]++, {
      ...request,
      model:
      /* istanbul ignore next */
      (cov_1mq0bs07p().b[5][0]++, request.model) ||
      /* istanbul ignore next */
      (cov_1mq0bs07p().b[5][1]++, this.defaultModel),
      temperature:
      /* istanbul ignore next */
      (cov_1mq0bs07p().b[7][0]++, (_b =
      /* istanbul ignore next */
      (cov_1mq0bs07p().b[9][0]++, (_a = request.temperature) !== null) &&
      /* istanbul ignore next */
      (cov_1mq0bs07p().b[9][1]++, _a !== void 0) ?
      /* istanbul ignore next */
      (cov_1mq0bs07p().b[8][0]++, _a) :
      /* istanbul ignore next */
      (cov_1mq0bs07p().b[8][1]++, this.config.temperature)) !== null) &&
      /* istanbul ignore next */
      (cov_1mq0bs07p().b[7][1]++, _b !== void 0) ?
      /* istanbul ignore next */
      (cov_1mq0bs07p().b[6][0]++, _b) :
      /* istanbul ignore next */
      (cov_1mq0bs07p().b[6][1]++, 0.7),
      max_tokens:
      /* istanbul ignore next */
      (cov_1mq0bs07p().b[11][0]++, (_d =
      /* istanbul ignore next */
      (cov_1mq0bs07p().b[13][0]++, (_c = request.max_tokens) !== null) &&
      /* istanbul ignore next */
      (cov_1mq0bs07p().b[13][1]++, _c !== void 0) ?
      /* istanbul ignore next */
      (cov_1mq0bs07p().b[12][0]++, _c) :
      /* istanbul ignore next */
      (cov_1mq0bs07p().b[12][1]++, this.config.maxTokens)) !== null) &&
      /* istanbul ignore next */
      (cov_1mq0bs07p().b[11][1]++, _d !== void 0) ?
      /* istanbul ignore next */
      (cov_1mq0bs07p().b[10][0]++, _d) :
      /* istanbul ignore next */
      (cov_1mq0bs07p().b[10][1]++, 2000)
    });
    /* istanbul ignore next */
    cov_1mq0bs07p().s[12]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1mq0bs07p().s[13]++, await this.client.post('/chat/completions', payload));
      /* istanbul ignore next */
      cov_1mq0bs07p().s[14]++;
      return response.data;
    } catch (error) {
      /* istanbul ignore next */
      cov_1mq0bs07p().s[15]++;
      throw this.handleApiError(error);
    }
  }
  /**
   * 处理 API 错误
   */
  handleApiError(error) {
    /* istanbul ignore next */
    cov_1mq0bs07p().f[5]++;
    var _a;
    /* istanbul ignore next */
    cov_1mq0bs07p().s[16]++;
    if (error.response) {
      /* istanbul ignore next */
      cov_1mq0bs07p().b[14][0]++;
      // API 响应的错误
      const status =
      /* istanbul ignore next */
      (cov_1mq0bs07p().s[17]++, error.response.status);
      const data =
      /* istanbul ignore next */
      (cov_1mq0bs07p().s[18]++, error.response.data);
      /* istanbul ignore next */
      cov_1mq0bs07p().s[19]++;
      switch (status) {
        case 401:
          /* istanbul ignore next */
          cov_1mq0bs07p().b[15][0]++;
          cov_1mq0bs07p().s[20]++;
          throw new Error('Invalid API key. Please check your DeepSeek API credentials.');
        case 403:
          /* istanbul ignore next */
          cov_1mq0bs07p().b[15][1]++;
          cov_1mq0bs07p().s[21]++;
          throw new Error('API key does not have permission to access this resource.');
        case 429:
          /* istanbul ignore next */
          cov_1mq0bs07p().b[15][2]++;
          cov_1mq0bs07p().s[22]++;
          throw new Error('Rate limit exceeded. Please try again later.');
        default:
          /* istanbul ignore next */
          cov_1mq0bs07p().b[15][3]++;
          cov_1mq0bs07p().s[23]++;
          throw new Error(`DeepSeek API error (${status}): ${
          /* istanbul ignore next */
          (cov_1mq0bs07p().b[16][0]++,
          /* istanbul ignore next */
          (cov_1mq0bs07p().b[18][0]++, (_a = data.error) === null) ||
          /* istanbul ignore next */
          (cov_1mq0bs07p().b[18][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_1mq0bs07p().b[17][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1mq0bs07p().b[17][1]++, _a.message)) ||
          /* istanbul ignore next */
          (cov_1mq0bs07p().b[16][1]++, 'Unknown error')}`);
      }
    } else {
      /* istanbul ignore next */
      cov_1mq0bs07p().b[14][1]++;
      cov_1mq0bs07p().s[24]++;
      if (error.request) {
        /* istanbul ignore next */
        cov_1mq0bs07p().b[19][0]++;
        cov_1mq0bs07p().s[25]++;
        // 请求发送失败
        throw new Error('Failed to connect to DeepSeek API. Please check your internet connection.');
      } else {
        /* istanbul ignore next */
        cov_1mq0bs07p().b[19][1]++;
        cov_1mq0bs07p().s[26]++;
        // 其他错误
        throw new Error(`Error: ${error.message}`);
      }
    }
  }
  /**
   * 生成系统提示
   */
  static generateSystemPrompt(format =
  /* istanbul ignore next */
  (cov_1mq0bs07p().b[20][0]++, 'draft-07')) {
    /* istanbul ignore next */
    cov_1mq0bs07p().f[6]++;
    cov_1mq0bs07p().s[27]++;
    return `You are a JSON Schema expert. Your task is to analyze JSON data and generate accurate JSON Schema definitions.
Please follow these guidelines:
1. Use JSON Schema ${format} format
2. Include detailed descriptions for each field
3. Add appropriate examples where possible
4. Infer proper types and formats
5. Include validation rules when obvious from the data
6. Keep the schema concise but comprehensive`;
  }
  /**
   * 生成用户提示
   */
  static generateUserPrompt(json) {
    /* istanbul ignore next */
    cov_1mq0bs07p().f[7]++;
    cov_1mq0bs07p().s[28]++;
    return `Please generate a JSON Schema for the following JSON data. Include detailed descriptions and examples:

${json}

Please provide only the JSON Schema as output, without any additional text or explanations.`;
  }
}
/* istanbul ignore next */
cov_1mq0bs07p().s[29]++;
exports.DeepSeekClient = DeepSeekClient;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,