81c97d9b22ec2a3007856943b08fb614
/* istanbul ignore next */
function cov_qkguq3bdj() {
  var path = "C:\\Users\\hongping\\CascadeProjects\\json-sage-ai-agent\\src\\utils\\healthCheck.js";
  var hash = "8bf7b4e654558f93b6f6769c875c280d1da767e1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\hongping\\CascadeProjects\\json-sage-ai-agent\\src\\utils\\healthCheck.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 8
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "1": {
        start: {
          line: 4,
          column: 8
        },
        end: {
          line: 4,
          column: 26
        }
      },
      "2": {
        start: {
          line: 5,
          column: 8
        },
        end: {
          line: 5,
          column: 33
        }
      },
      "3": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 11,
          column: 9
        }
      },
      "4": {
        start: {
          line: 10,
          column: 12
        },
        end: {
          line: 10,
          column: 65
        }
      },
      "5": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 15,
          column: 9
        }
      },
      "6": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 14,
          column: 71
        }
      },
      "7": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 43
        }
      },
      "8": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 37
        }
      },
      "9": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 41
        }
      },
      "10": {
        start: {
          line: 29,
          column: 23
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "11": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "12": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 50,
          column: 13
        }
      },
      "13": {
        start: {
          line: 37,
          column: 34
        },
        end: {
          line: 37,
          column: 43
        }
      },
      "14": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 40,
          column: 18
        }
      },
      "15": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 43,
          column: 17
        }
      },
      "16": {
        start: {
          line: 42,
          column: 20
        },
        end: {
          line: 42,
          column: 43
        }
      },
      "17": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 48,
          column: 18
        }
      },
      "18": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 39
        }
      },
      "19": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 34
        }
      },
      "20": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 22
        }
      },
      "21": {
        start: {
          line: 58,
          column: 23
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "22": {
        start: {
          line: 64,
          column: 23
        },
        end: {
          line: 85,
          column: 10
        }
      },
      "23": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 84,
          column: 13
        }
      },
      "24": {
        start: {
          line: 66,
          column: 37
        },
        end: {
          line: 66,
          column: 63
        }
      },
      "25": {
        start: {
          line: 67,
          column: 39
        },
        end: {
          line: 69,
          column: 17
        }
      },
      "26": {
        start: {
          line: 68,
          column: 20
        },
        end: {
          line: 68,
          column: 83
        }
      },
      "27": {
        start: {
          line: 68,
          column: 37
        },
        end: {
          line: 68,
          column: 73
        }
      },
      "28": {
        start: {
          line: 71,
          column: 34
        },
        end: {
          line: 71,
          column: 84
        }
      },
      "29": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 74,
          column: 18
        }
      },
      "30": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 77,
          column: 17
        }
      },
      "31": {
        start: {
          line: 76,
          column: 20
        },
        end: {
          line: 76,
          column: 43
        }
      },
      "32": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 82,
          column: 18
        }
      },
      "33": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 39
        }
      },
      "34": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 34
        }
      },
      "35": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 34
        }
      },
      "36": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 22
        }
      },
      "37": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 96,
          column: 11
        }
      },
      "38": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "39": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 68
        }
      },
      "40": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 28
        }
      },
      "41": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 26
        }
      },
      "42": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 36
        }
      },
      "43": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 28
        }
      },
      "44": {
        start: {
          line: 121,
          column: 0
        },
        end: {
          line: 121,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 4
          },
          end: {
            line: 2,
            column: 5
          }
        },
        loc: {
          start: {
            line: 2,
            column: 18
          },
          end: {
            line: 6,
            column: 5
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 37
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 30
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 23
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 28
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        loc: {
          start: {
            line: 57,
            column: 37
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 57
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 64,
            column: 65
          },
          end: {
            line: 64,
            column: 66
          }
        },
        loc: {
          start: {
            line: 64,
            column: 92
          },
          end: {
            line: 85,
            column: 9
          }
        },
        line: 64
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 67,
            column: 51
          },
          end: {
            line: 67,
            column: 52
          }
        },
        loc: {
          start: {
            line: 68,
            column: 20
          },
          end: {
            line: 68,
            column: 83
          }
        },
        line: 68
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 68,
            column: 31
          },
          end: {
            line: 68,
            column: 32
          }
        },
        loc: {
          start: {
            line: 68,
            column: 37
          },
          end: {
            line: 68,
            column: 73
          }
        },
        line: 68
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        },
        loc: {
          start: {
            line: 92,
            column: 25
          },
          end: {
            line: 102,
            column: 5
          }
        },
        line: 92
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 104,
            column: 5
          }
        },
        loc: {
          start: {
            line: 104,
            column: 17
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 104
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        loc: {
          start: {
            line: 108,
            column: 19
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 108
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        loc: {
          start: {
            line: 112,
            column: 16
          },
          end: {
            line: 114,
            column: 5
          }
        },
        line: 112
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        loc: {
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 116
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 11,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 11,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 15,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 15,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 43,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 43,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "3": {
        loc: {
          start: {
            line: 57,
            column: 21
          },
          end: {
            line: 57,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 57,
            column: 31
          },
          end: {
            line: 57,
            column: 35
          }
        }],
        line: 57
      },
      "4": {
        loc: {
          start: {
            line: 75,
            column: 16
          },
          end: {
            line: 77,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 16
          },
          end: {
            line: 77,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "5": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8bf7b4e654558f93b6f6769c875c280d1da767e1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_qkguq3bdj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_qkguq3bdj();
class HealthChecker {
  constructor() {
    /* istanbul ignore next */
    cov_qkguq3bdj().f[0]++;
    cov_qkguq3bdj().s[0]++;
    this.components = new Map();
    /* istanbul ignore next */
    cov_qkguq3bdj().s[1]++;
    this.history = [];
    /* istanbul ignore next */
    cov_qkguq3bdj().s[2]++;
    this.maxHistorySize = 10;
  }
  registerComponent(name, checkFn) {
    /* istanbul ignore next */
    cov_qkguq3bdj().f[1]++;
    cov_qkguq3bdj().s[3]++;
    if (typeof checkFn !== 'function') {
      /* istanbul ignore next */
      cov_qkguq3bdj().b[0][0]++;
      cov_qkguq3bdj().s[4]++;
      throw new Error('Check function must be a function');
    } else
    /* istanbul ignore next */
    {
      cov_qkguq3bdj().b[0][1]++;
    }
    cov_qkguq3bdj().s[5]++;
    if (this.components.has(name)) {
      /* istanbul ignore next */
      cov_qkguq3bdj().b[1][0]++;
      cov_qkguq3bdj().s[6]++;
      throw new Error(`Component ${name} is already registered`);
    } else
    /* istanbul ignore next */
    {
      cov_qkguq3bdj().b[1][1]++;
    }
    cov_qkguq3bdj().s[7]++;
    this.components.set(name, checkFn);
  }
  unregisterComponent(name) {
    /* istanbul ignore next */
    cov_qkguq3bdj().f[2]++;
    cov_qkguq3bdj().s[8]++;
    this.components.delete(name);
  }
  hasComponent(name) {
    /* istanbul ignore next */
    cov_qkguq3bdj().f[3]++;
    cov_qkguq3bdj().s[9]++;
    return this.components.has(name);
  }
  check() {
    /* istanbul ignore next */
    cov_qkguq3bdj().f[4]++;
    const status =
    /* istanbul ignore next */
    (cov_qkguq3bdj().s[10]++, {
      healthy: true,
      components: {},
      lastCheck: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_qkguq3bdj().s[11]++;
    for (const [name, checkFn] of this.components) {
      /* istanbul ignore next */
      cov_qkguq3bdj().s[12]++;
      try {
        const isHealthy =
        /* istanbul ignore next */
        (cov_qkguq3bdj().s[13]++, checkFn());
        /* istanbul ignore next */
        cov_qkguq3bdj().s[14]++;
        status.components[name] = {
          healthy: isHealthy
        };
        /* istanbul ignore next */
        cov_qkguq3bdj().s[15]++;
        if (!isHealthy) {
          /* istanbul ignore next */
          cov_qkguq3bdj().b[2][0]++;
          cov_qkguq3bdj().s[16]++;
          status.healthy = false;
        } else
        /* istanbul ignore next */
        {
          cov_qkguq3bdj().b[2][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_qkguq3bdj().s[17]++;
        status.components[name] = {
          healthy: false,
          error: error.message
        };
        /* istanbul ignore next */
        cov_qkguq3bdj().s[18]++;
        status.healthy = false;
      }
    }
    /* istanbul ignore next */
    cov_qkguq3bdj().s[19]++;
    this.addToHistory(status);
    /* istanbul ignore next */
    cov_qkguq3bdj().s[20]++;
    return status;
  }
  async checkAsync(timeout =
  /* istanbul ignore next */
  (cov_qkguq3bdj().b[3][0]++, 5000)) {
    /* istanbul ignore next */
    cov_qkguq3bdj().f[5]++;
    const status =
    /* istanbul ignore next */
    (cov_qkguq3bdj().s[21]++, {
      healthy: true,
      components: {},
      lastCheck: new Date().toISOString()
    });
    const checks =
    /* istanbul ignore next */
    (cov_qkguq3bdj().s[22]++, Array.from(this.components.entries()).map(async ([name, checkFn]) => {
      /* istanbul ignore next */
      cov_qkguq3bdj().f[6]++;
      cov_qkguq3bdj().s[23]++;
      try {
        const checkPromise =
        /* istanbul ignore next */
        (cov_qkguq3bdj().s[24]++, Promise.resolve(checkFn()));
        const timeoutPromise =
        /* istanbul ignore next */
        (cov_qkguq3bdj().s[25]++, new Promise((_, reject) => {
          /* istanbul ignore next */
          cov_qkguq3bdj().f[7]++;
          cov_qkguq3bdj().s[26]++;
          return setTimeout(() => {
            /* istanbul ignore next */
            cov_qkguq3bdj().f[8]++;
            cov_qkguq3bdj().s[27]++;
            return reject(new Error('Check timed out'));
          }, timeout);
        }));
        const isHealthy =
        /* istanbul ignore next */
        (cov_qkguq3bdj().s[28]++, await Promise.race([checkPromise, timeoutPromise]));
        /* istanbul ignore next */
        cov_qkguq3bdj().s[29]++;
        status.components[name] = {
          healthy: isHealthy
        };
        /* istanbul ignore next */
        cov_qkguq3bdj().s[30]++;
        if (!isHealthy) {
          /* istanbul ignore next */
          cov_qkguq3bdj().b[4][0]++;
          cov_qkguq3bdj().s[31]++;
          status.healthy = false;
        } else
        /* istanbul ignore next */
        {
          cov_qkguq3bdj().b[4][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_qkguq3bdj().s[32]++;
        status.components[name] = {
          healthy: false,
          error: error.message
        };
        /* istanbul ignore next */
        cov_qkguq3bdj().s[33]++;
        status.healthy = false;
      }
    }));
    /* istanbul ignore next */
    cov_qkguq3bdj().s[34]++;
    await Promise.all(checks);
    /* istanbul ignore next */
    cov_qkguq3bdj().s[35]++;
    this.addToHistory(status);
    /* istanbul ignore next */
    cov_qkguq3bdj().s[36]++;
    return status;
  }
  addToHistory(status) {
    /* istanbul ignore next */
    cov_qkguq3bdj().f[9]++;
    cov_qkguq3bdj().s[37]++;
    this.history.push({
      timestamp: new Date().toISOString(),
      status
    });

    // 保持历史记录在限制范围内
    /* istanbul ignore next */
    cov_qkguq3bdj().s[38]++;
    if (this.history.length > this.maxHistorySize) {
      /* istanbul ignore next */
      cov_qkguq3bdj().b[5][0]++;
      cov_qkguq3bdj().s[39]++;
      this.history = this.history.slice(-this.maxHistorySize);
    } else
    /* istanbul ignore next */
    {
      cov_qkguq3bdj().b[5][1]++;
    }
  }
  getHistory() {
    /* istanbul ignore next */
    cov_qkguq3bdj().f[10]++;
    cov_qkguq3bdj().s[40]++;
    return this.history;
  }
  clearHistory() {
    /* istanbul ignore next */
    cov_qkguq3bdj().f[11]++;
    cov_qkguq3bdj().s[41]++;
    this.history = [];
  }
  isHealthy() {
    /* istanbul ignore next */
    cov_qkguq3bdj().f[12]++;
    cov_qkguq3bdj().s[42]++;
    return this.check().healthy;
  }
  getStatus() {
    /* istanbul ignore next */
    cov_qkguq3bdj().f[13]++;
    cov_qkguq3bdj().s[43]++;
    return this.check();
  }
}
/* istanbul ignore next */
cov_qkguq3bdj().s[44]++;
module.exports = {
  HealthChecker
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,