{"version":3,"names":["cov_1js2wd74t","actualCoverage","s","VisionProcessor","constructor","config","b","f","modelPath","deviceType","maxTokens","initialize","console","log","analyzeImage","imageData","length","description","objects","attributes","colors","size","quality","error","generateJsonMapping","imageAnalysis","schema","mapping","imageContent","detectedObjects","metadata","timestamp","Date","toISOString","confidence","processingDetails","model","version","mapToSchema","data","result","properties","key","def","Object","entries","exports"],"sources":["C:\\Users\\hongping\\CascadeProjects\\json-sage-ai-agent\\src\\vision\\smolvlm.ts"],"sourcesContent":["// 模拟SmolVLM接口\nexport interface VisionConfig {\n  modelPath?: string;\n  deviceType?: 'cpu' | 'cuda';\n  maxTokens?: number;\n}\n\nexport class VisionProcessor {\n  private config: VisionConfig;\n\n  constructor(config: VisionConfig = {}) {\n    this.config = {\n      modelPath: config.modelPath || 'models/smolvlm-v1',\n      deviceType: config.deviceType || 'cpu',\n      maxTokens: config.maxTokens || 512\n    };\n  }\n\n  async initialize(): Promise<void> {\n    // 模拟初始化过程\n    console.log('Initializing VisionProcessor with config:', this.config);\n  }\n\n  async analyzeImage(imageData: Buffer): Promise<{\n    description: string;\n    objects: string[];\n    attributes: Record<string, any>;\n  }> {\n    try {\n      // 模拟图像分析过程\n      console.log('Analyzing image of size:', imageData.length, 'bytes');\n      \n      // 返回模拟数据\n      return {\n        description: 'A sample image analysis result',\n        objects: ['object1', 'object2'],\n        attributes: {\n          colors: ['blue', 'red'],\n          size: 'medium',\n          quality: 'high'\n        }\n      };\n    } catch (error) {\n      console.error('Error analyzing image:', error);\n      throw error;\n    }\n  }\n\n  async generateJsonMapping(\n    imageAnalysis: any,\n    schema?: Record<string, any>\n  ): Promise<Record<string, any>> {\n    const mapping = {\n      imageContent: {\n        description: imageAnalysis.description,\n        detectedObjects: imageAnalysis.objects,\n        attributes: imageAnalysis.attributes\n      },\n      metadata: {\n        timestamp: new Date().toISOString(),\n        confidence: 0.95,\n        processingDetails: {\n          model: 'SmolVLM-Mock',\n          version: '1.0.0'\n        }\n      }\n    };\n\n    if (schema) {\n      return this.mapToSchema(mapping, schema);\n    }\n\n    return mapping;\n  }\n\n  private mapToSchema(\n    data: Record<string, any>,\n    schema: Record<string, any>\n  ): Record<string, any> {\n    // 基础的schema映射实现\n    const result: Record<string, any> = {};\n    \n    if (schema.properties) {\n      for (const [key, def] of Object.entries(schema.properties)) {\n        if (data[key]) {\n          result[key] = data[key];\n        }\n      }\n    }\n    \n    return result;\n  }\n}\n"],"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","ignoreList":[]}