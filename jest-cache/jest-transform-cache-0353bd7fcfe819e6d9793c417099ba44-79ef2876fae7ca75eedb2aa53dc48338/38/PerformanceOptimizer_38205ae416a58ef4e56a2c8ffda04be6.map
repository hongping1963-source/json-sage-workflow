{"version":3,"names":["cov_o6q0egw1t","actualCoverage","s","PerformanceOptimizer","constructor","f","parseCache","Map","stringifyCache","metrics","parseTime","stringifyTime","cacheHits","cacheMisses","optimize","projectInfo","configureOptimizations","type","b","configureFrontendOptimizations","framework","configureBackendOptimizations","configureFullstackOptimizations","optimizedParse","data","start","performance","now","cached","get","result","JSON","parse","set","end","push","error","console","optimizedStringify","cacheKey","stringify","generateReport","avgParseTime","reduce","a","length","avgStringifyTime","averageParseTime","averageStringifyTime","cacheHitRate","totalOperations","exports"],"sources":["C:\\Users\\hongping\\CascadeProjects\\json-sage-ai-agent\\src\\core\\PerformanceOptimizer.ts"],"sourcesContent":["import type { ProjectInfo } from './ProjectAnalyzer';\r\n\r\nexport class PerformanceOptimizer {\r\n    private parseCache: Map<string, any> = new Map();\r\n    private stringifyCache: Map<string, string> = new Map();\r\n    private metrics: {\r\n        parseTime: number[];\r\n        stringifyTime: number[];\r\n        cacheHits: number;\r\n        cacheMisses: number;\r\n    } = {\r\n        parseTime: [],\r\n        stringifyTime: [],\r\n        cacheHits: 0,\r\n        cacheMisses: 0\r\n    };\r\n\r\n    async optimize(projectInfo: ProjectInfo) {\r\n        // 根据项目类型和框架选择最优策略\r\n        this.configureOptimizations(projectInfo);\r\n    }\r\n\r\n    private configureOptimizations(projectInfo: ProjectInfo) {\r\n        switch (projectInfo.type) {\r\n            case 'frontend':\r\n                this.configureFrontendOptimizations(projectInfo.framework);\r\n                break;\r\n            case 'backend':\r\n                this.configureBackendOptimizations(projectInfo.framework);\r\n                break;\r\n            case 'fullstack':\r\n                this.configureFullstackOptimizations(projectInfo.framework);\r\n                break;\r\n        }\r\n    }\r\n\r\n    optimizedParse(data: string) {\r\n        const start = performance.now();\r\n        \r\n        // 检查缓存\r\n        const cached = this.parseCache.get(data);\r\n        if (cached) {\r\n            this.metrics.cacheHits++;\r\n            return cached;\r\n        }\r\n\r\n        this.metrics.cacheMisses++;\r\n        \r\n        try {\r\n            const result = JSON.parse(data);\r\n            this.parseCache.set(data, result);\r\n            \r\n            const end = performance.now();\r\n            this.metrics.parseTime.push(end - start);\r\n            \r\n            return result;\r\n        } catch (error) {\r\n            console.error('Parse error:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    optimizedStringify(data: any) {\r\n        const start = performance.now();\r\n        \r\n        // 生成缓存键\r\n        const cacheKey = JSON.stringify(data);\r\n        \r\n        // 检查缓存\r\n        const cached = this.stringifyCache.get(cacheKey);\r\n        if (cached) {\r\n            this.metrics.cacheHits++;\r\n            return cached;\r\n        }\r\n\r\n        this.metrics.cacheMisses++;\r\n        \r\n        try {\r\n            const result = JSON.stringify(data);\r\n            this.stringifyCache.set(cacheKey, result);\r\n            \r\n            const end = performance.now();\r\n            this.metrics.stringifyTime.push(end - start);\r\n            \r\n            return result;\r\n        } catch (error) {\r\n            console.error('Stringify error:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    generateReport() {\r\n        const avgParseTime = this.metrics.parseTime.reduce((a, b) => a + b, 0) / this.metrics.parseTime.length;\r\n        const avgStringifyTime = this.metrics.stringifyTime.reduce((a, b) => a + b, 0) / this.metrics.stringifyTime.length;\r\n\r\n        return {\r\n            averageParseTime: avgParseTime,\r\n            averageStringifyTime: avgStringifyTime,\r\n            cacheHitRate: this.metrics.cacheHits / (this.metrics.cacheHits + this.metrics.cacheMisses),\r\n            totalOperations: this.metrics.cacheHits + this.metrics.cacheMisses\r\n        };\r\n    }\r\n\r\n    private configureFrontendOptimizations(framework: string) {\r\n        // 前端特定优化\r\n    }\r\n\r\n    private configureBackendOptimizations(framework: string) {\r\n        // 后端特定优化\r\n    }\r\n\r\n    private configureFullstackOptimizations(framework: string) {\r\n        // 全栈特定优化\r\n    }\r\n}\r\n"],"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","ignoreList":[]}