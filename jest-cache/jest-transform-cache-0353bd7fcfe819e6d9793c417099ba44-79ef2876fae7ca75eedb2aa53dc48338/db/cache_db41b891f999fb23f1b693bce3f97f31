776728ad6b8eec6fb46e3668f5fc8458
"use strict";

/* istanbul ignore next */
function cov_26et9mbbg() {
  var path = "C:\\Users\\hongping\\CascadeProjects\\json-sage-ai-agent\\src\\core\\cache.ts";
  var hash = "85d124c3b1249fa8018af06c6de172f157e5d789";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\hongping\\CascadeProjects\\json-sage-ai-agent\\src\\core\\cache.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 6,
          column: 8
        },
        end: {
          line: 6,
          column: 31
        }
      },
      "3": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 7,
          column: 27
        }
      },
      "4": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 13,
          column: 10
        }
      },
      "5": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 46
        }
      },
      "6": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "7": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 64
        }
      },
      "8": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 19
        }
      },
      "9": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 34
        }
      },
      "10": {
        start: {
          line: 24,
          column: 22
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "11": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 35
        }
      },
      "12": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 31
        }
      },
      "13": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 35,
          column: 41
        }
      },
      "14": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "15": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 29
        }
      },
      "16": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "17": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 35
        }
      },
      "18": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 41
        }
      },
      "19": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 29
        }
      },
      "20": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 28
        }
      },
      "21": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 38
        }
      },
      "22": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 27
        }
      },
      "23": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "24": {
        start: {
          line: 52,
          column: 24
        },
        end: {
          line: 52,
          column: 45
        }
      },
      "25": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 34
        }
      },
      "26": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 21
        }
      },
      "27": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 63
        }
      },
      "28": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "29": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 19
        }
      },
      "30": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "31": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 42
        }
      },
      "32": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 43
        }
      },
      "33": {
        start: {
          line: 75,
          column: 23
        },
        end: {
          line: 75,
          column: 32
        }
      },
      "34": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "35": {
        start: {
          line: 81,
          column: 31
        },
        end: {
          line: 81,
          column: 81
        }
      },
      "36": {
        start: {
          line: 82,
          column: 33
        },
        end: {
          line: 82,
          column: 64
        }
      },
      "37": {
        start: {
          line: 83,
          column: 31
        },
        end: {
          line: 83,
          column: 64
        }
      },
      "38": {
        start: {
          line: 84,
          column: 26
        },
        end: {
          line: 84,
          column: 72
        }
      },
      "39": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 35
        }
      },
      "40": {
        start: {
          line: 88,
          column: 30
        },
        end: {
          line: 89,
          column: 40
        }
      },
      "41": {
        start: {
          line: 89,
          column: 28
        },
        end: {
          line: 89,
          column: 39
        }
      },
      "42": {
        start: {
          line: 90,
          column: 25
        },
        end: {
          line: 90,
          column: 26
        }
      },
      "43": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "44": {
        start: {
          line: 92,
          column: 26
        },
        end: {
          line: 92,
          column: 45
        }
      },
      "45": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 35
        }
      },
      "46": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 37
        }
      },
      "47": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 41
        }
      },
      "48": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 98,
          column: 13
        }
      },
      "49": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 22
        }
      },
      "50": {
        start: {
          line: 103,
          column: 24
        },
        end: {
          line: 103,
          column: 56
        }
      },
      "51": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 64
        }
      },
      "52": {
        start: {
          line: 104,
          column: 31
        },
        end: {
          line: 104,
          column: 62
        }
      },
      "53": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "54": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 35
        }
      },
      "55": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 41
        }
      },
      "56": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 110,
          column: 13
        }
      },
      "57": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 109,
          column: 22
        }
      },
      "58": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 121,
          column: 10
        }
      },
      "59": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 125,
          column: 21
        }
      },
      "60": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 21
        }
      },
      "61": {
        start: {
          line: 126,
          column: 20
        },
        end: {
          line: 126,
          column: 21
        }
      },
      "62": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "63": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 39
        }
      },
      "64": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 39
        }
      },
      "65": {
        start: {
          line: 133,
          column: 0
        },
        end: {
          line: 133,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 5,
            column: 5
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 13
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 34
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        loc: {
          start: {
            line: 50,
            column: 25
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 50
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        loc: {
          start: {
            line: 59,
            column: 21
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 59
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        loc: {
          start: {
            line: 62,
            column: 33
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 62
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        loc: {
          start: {
            line: 73,
            column: 29
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 73
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 89,
            column: 18
          },
          end: {
            line: 89,
            column: 19
          }
        },
        loc: {
          start: {
            line: 89,
            column: 28
          },
          end: {
            line: 89,
            column: 39
          }
        },
        line: 89
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        loc: {
          start: {
            line: 101,
            column: 30
          },
          end: {
            line: 112,
            column: 5
          }
        },
        line: 101
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 104,
            column: 21
          },
          end: {
            line: 104,
            column: 22
          }
        },
        loc: {
          start: {
            line: 104,
            column: 31
          },
          end: {
            line: 104,
            column: 62
          }
        },
        line: 104
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        loc: {
          start: {
            line: 114,
            column: 15
          },
          end: {
            line: 122,
            column: 5
          }
        },
        line: 114
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        loc: {
          start: {
            line: 123,
            column: 34
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 123
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 5,
            column: 16
          },
          end: {
            line: 5,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 5,
            column: 26
          },
          end: {
            line: 5,
            column: 28
          }
        }],
        line: 5
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "5": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: 69,
            column: 13
          },
          end: {
            line: 71,
            column: 9
          }
        }],
        line: 66
      },
      "6": {
        loc: {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 98,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 98,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "7": {
        loc: {
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 110,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 110,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "8": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 125,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 125,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\hongping\\CascadeProjects\\json-sage-ai-agent\\src\\core\\cache.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\hongping\\CascadeProjects\\json-sage-ai-agent\\src\\core\\cache.ts"],
      sourcesContent: ["interface CacheOptions {\r\n    maxSize?: number;        // \u6700\u5927\u7F13\u5B58\u6761\u76EE\u6570\r\n    ttl?: number;           // \u7F13\u5B58\u751F\u5B58\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09\r\n    smartPruning?: boolean; // \u662F\u5426\u542F\u7528\u667A\u80FD\u6E05\u7406\r\n}\r\n\r\ninterface CacheEntry<T> {\r\n    value: T;\r\n    timestamp: number;\r\n    accessCount: number;\r\n    lastAccess: number;\r\n    size: number;\r\n}\r\n\r\nexport class SmartCache<T> {\r\n    private cache: Map<string, CacheEntry<T>> = new Map();\r\n    private options: Required<CacheOptions>;\r\n    private totalSize: number = 0;\r\n\r\n    constructor(options: CacheOptions = {}) {\r\n        this.options = {\r\n            maxSize: 1000,\r\n            ttl: 3600000, // 1\u5C0F\u65F6\r\n            smartPruning: true,\r\n            ...options\r\n        };\r\n    }\r\n\r\n    set(key: string, value: T): void {\r\n        const size = this.calculateSize(value);\r\n        \r\n        // \u5982\u679C\u65B0\u9879\u76EE\u592A\u5927\uFF0C\u76F4\u63A5\u8FD4\u56DE\r\n        if (size > this.options.maxSize) {\r\n            console.warn(`Cache item too large: ${size} bytes`);\r\n            return;\r\n        }\r\n\r\n        // \u786E\u4FDD\u6709\u8DB3\u591F\u7A7A\u95F4\r\n        this.ensureCapacity(size);\r\n\r\n        const entry: CacheEntry<T> = {\r\n            value,\r\n            timestamp: Date.now(),\r\n            accessCount: 0,\r\n            lastAccess: Date.now(),\r\n            size\r\n        };\r\n\r\n        this.cache.set(key, entry);\r\n        this.totalSize += size;\r\n    }\r\n\r\n    get(key: string): T | undefined {\r\n        const entry = this.cache.get(key);\r\n        \r\n        if (!entry) {\r\n            return undefined;\r\n        }\r\n\r\n        // \u68C0\u67E5\u662F\u5426\u8FC7\u671F\r\n        if (this.isExpired(entry)) {\r\n            this.cache.delete(key);\r\n            this.totalSize -= entry.size;\r\n            return undefined;\r\n        }\r\n\r\n        // \u66F4\u65B0\u8BBF\u95EE\u7EDF\u8BA1\r\n        entry.accessCount++;\r\n        entry.lastAccess = Date.now();\r\n\r\n        return entry.value;\r\n    }\r\n\r\n    private calculateSize(value: T): number {\r\n        try {\r\n            const str = JSON.stringify(value);\r\n            return str.length * 2; // \u5047\u8BBE\u6BCF\u4E2A\u5B57\u7B26\u5360\u75282\u5B57\u8282\r\n        } catch {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    private isExpired(entry: CacheEntry<T>): boolean {\r\n        return Date.now() - entry.timestamp > this.options.ttl;\r\n    }\r\n\r\n    private ensureCapacity(requiredSize: number): void {\r\n        if (this.totalSize + requiredSize <= this.options.maxSize) {\r\n            return;\r\n        }\r\n\r\n        if (this.options.smartPruning) {\r\n            this.smartPrune(requiredSize);\r\n        } else {\r\n            this.simplePrune(requiredSize);\r\n        }\r\n    }\r\n\r\n    private smartPrune(requiredSize: number): void {\r\n        // \u8BA1\u7B97\u6BCF\u4E2A\u6761\u76EE\u7684\u5206\u6570\r\n        const scores = new Map<string, number>();\r\n        \r\n        for (const [key, entry] of this.cache.entries()) {\r\n            // \u5206\u6570\u8BA1\u7B97\u8003\u8651\uFF1A\r\n            // 1. \u8BBF\u95EE\u9891\u7387\r\n            // 2. \u6700\u540E\u8BBF\u95EE\u65F6\u95F4\r\n            // 3. \u6761\u76EE\u5927\u5C0F\r\n            const timeFactor = (Date.now() - entry.lastAccess) / this.options.ttl;\r\n            const accessFactor = Math.log(entry.accessCount + 1);\r\n            const sizeFactor = entry.size / this.options.maxSize;\r\n\r\n            const score = (accessFactor / timeFactor) * (1 / sizeFactor);\r\n            scores.set(key, score);\r\n        }\r\n\r\n        // \u6309\u5206\u6570\u6392\u5E8F\u5E76\u5220\u9664\u4F4E\u5206\u6761\u76EE\r\n        const sortedEntries = Array.from(scores.entries())\r\n            .sort((a, b) => a[1] - b[1]);\r\n\r\n        let freedSpace = 0;\r\n        for (const [key] of sortedEntries) {\r\n            const entry = this.cache.get(key)!;\r\n            this.cache.delete(key);\r\n            freedSpace += entry.size;\r\n            this.totalSize -= entry.size;\r\n\r\n            if (this.totalSize + requiredSize <= this.options.maxSize) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private simplePrune(requiredSize: number): void {\r\n        // \u7B80\u5355\u5730\u5220\u9664\u6700\u65E7\u7684\u6761\u76EE\r\n        const entries = Array.from(this.cache.entries());\r\n        entries.sort((a, b) => a[1].timestamp - b[1].timestamp);\r\n\r\n        for (const [key, entry] of entries) {\r\n            this.cache.delete(key);\r\n            this.totalSize -= entry.size;\r\n\r\n            if (this.totalSize + requiredSize <= this.options.maxSize) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // \u83B7\u53D6\u7F13\u5B58\u7EDF\u8BA1\u4FE1\u606F\r\n    getStats() {\r\n        return {\r\n            totalSize: this.totalSize,\r\n            itemCount: this.cache.size,\r\n            maxSize: this.options.maxSize,\r\n            utilization: this.totalSize / this.options.maxSize,\r\n            averageAccessCount: this.calculateAverageAccessCount()\r\n        };\r\n    }\r\n\r\n    private calculateAverageAccessCount(): number {\r\n        if (this.cache.size === 0) return 0;\r\n        \r\n        let total = 0;\r\n        for (const entry of this.cache.values()) {\r\n            total += entry.accessCount;\r\n        }\r\n        return total / this.cache.size;\r\n    }\r\n}\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "85d124c3b1249fa8018af06c6de172f157e5d789"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_26et9mbbg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_26et9mbbg();
cov_26et9mbbg().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_26et9mbbg().s[1]++;
exports.SmartCache = void 0;
class SmartCache {
  constructor(options =
  /* istanbul ignore next */
  (cov_26et9mbbg().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_26et9mbbg().f[0]++;
    cov_26et9mbbg().s[2]++;
    this.cache = new Map();
    /* istanbul ignore next */
    cov_26et9mbbg().s[3]++;
    this.totalSize = 0;
    /* istanbul ignore next */
    cov_26et9mbbg().s[4]++;
    this.options = {
      maxSize: 1000,
      ttl: 3600000,
      smartPruning: true,
      ...options
    };
  }
  set(key, value) {
    /* istanbul ignore next */
    cov_26et9mbbg().f[1]++;
    const size =
    /* istanbul ignore next */
    (cov_26et9mbbg().s[5]++, this.calculateSize(value));
    // 如果新项目太大，直接返回
    /* istanbul ignore next */
    cov_26et9mbbg().s[6]++;
    if (size > this.options.maxSize) {
      /* istanbul ignore next */
      cov_26et9mbbg().b[1][0]++;
      cov_26et9mbbg().s[7]++;
      console.warn(`Cache item too large: ${size} bytes`);
      /* istanbul ignore next */
      cov_26et9mbbg().s[8]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_26et9mbbg().b[1][1]++;
    }
    // 确保有足够空间
    cov_26et9mbbg().s[9]++;
    this.ensureCapacity(size);
    const entry =
    /* istanbul ignore next */
    (cov_26et9mbbg().s[10]++, {
      value,
      timestamp: Date.now(),
      accessCount: 0,
      lastAccess: Date.now(),
      size
    });
    /* istanbul ignore next */
    cov_26et9mbbg().s[11]++;
    this.cache.set(key, entry);
    /* istanbul ignore next */
    cov_26et9mbbg().s[12]++;
    this.totalSize += size;
  }
  get(key) {
    /* istanbul ignore next */
    cov_26et9mbbg().f[2]++;
    const entry =
    /* istanbul ignore next */
    (cov_26et9mbbg().s[13]++, this.cache.get(key));
    /* istanbul ignore next */
    cov_26et9mbbg().s[14]++;
    if (!entry) {
      /* istanbul ignore next */
      cov_26et9mbbg().b[2][0]++;
      cov_26et9mbbg().s[15]++;
      return undefined;
    } else
    /* istanbul ignore next */
    {
      cov_26et9mbbg().b[2][1]++;
    }
    // 检查是否过期
    cov_26et9mbbg().s[16]++;
    if (this.isExpired(entry)) {
      /* istanbul ignore next */
      cov_26et9mbbg().b[3][0]++;
      cov_26et9mbbg().s[17]++;
      this.cache.delete(key);
      /* istanbul ignore next */
      cov_26et9mbbg().s[18]++;
      this.totalSize -= entry.size;
      /* istanbul ignore next */
      cov_26et9mbbg().s[19]++;
      return undefined;
    } else
    /* istanbul ignore next */
    {
      cov_26et9mbbg().b[3][1]++;
    }
    // 更新访问统计
    cov_26et9mbbg().s[20]++;
    entry.accessCount++;
    /* istanbul ignore next */
    cov_26et9mbbg().s[21]++;
    entry.lastAccess = Date.now();
    /* istanbul ignore next */
    cov_26et9mbbg().s[22]++;
    return entry.value;
  }
  calculateSize(value) {
    /* istanbul ignore next */
    cov_26et9mbbg().f[3]++;
    cov_26et9mbbg().s[23]++;
    try {
      const str =
      /* istanbul ignore next */
      (cov_26et9mbbg().s[24]++, JSON.stringify(value));
      /* istanbul ignore next */
      cov_26et9mbbg().s[25]++;
      return str.length * 2; // 假设每个字符占用2字节
    } catch (_a) {
      /* istanbul ignore next */
      cov_26et9mbbg().s[26]++;
      return 0;
    }
  }
  isExpired(entry) {
    /* istanbul ignore next */
    cov_26et9mbbg().f[4]++;
    cov_26et9mbbg().s[27]++;
    return Date.now() - entry.timestamp > this.options.ttl;
  }
  ensureCapacity(requiredSize) {
    /* istanbul ignore next */
    cov_26et9mbbg().f[5]++;
    cov_26et9mbbg().s[28]++;
    if (this.totalSize + requiredSize <= this.options.maxSize) {
      /* istanbul ignore next */
      cov_26et9mbbg().b[4][0]++;
      cov_26et9mbbg().s[29]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_26et9mbbg().b[4][1]++;
    }
    cov_26et9mbbg().s[30]++;
    if (this.options.smartPruning) {
      /* istanbul ignore next */
      cov_26et9mbbg().b[5][0]++;
      cov_26et9mbbg().s[31]++;
      this.smartPrune(requiredSize);
    } else {
      /* istanbul ignore next */
      cov_26et9mbbg().b[5][1]++;
      cov_26et9mbbg().s[32]++;
      this.simplePrune(requiredSize);
    }
  }
  smartPrune(requiredSize) {
    /* istanbul ignore next */
    cov_26et9mbbg().f[6]++;
    // 计算每个条目的分数
    const scores =
    /* istanbul ignore next */
    (cov_26et9mbbg().s[33]++, new Map());
    /* istanbul ignore next */
    cov_26et9mbbg().s[34]++;
    for (const [key, entry] of this.cache.entries()) {
      // 分数计算考虑：
      // 1. 访问频率
      // 2. 最后访问时间
      // 3. 条目大小
      const timeFactor =
      /* istanbul ignore next */
      (cov_26et9mbbg().s[35]++, (Date.now() - entry.lastAccess) / this.options.ttl);
      const accessFactor =
      /* istanbul ignore next */
      (cov_26et9mbbg().s[36]++, Math.log(entry.accessCount + 1));
      const sizeFactor =
      /* istanbul ignore next */
      (cov_26et9mbbg().s[37]++, entry.size / this.options.maxSize);
      const score =
      /* istanbul ignore next */
      (cov_26et9mbbg().s[38]++, accessFactor / timeFactor * (1 / sizeFactor));
      /* istanbul ignore next */
      cov_26et9mbbg().s[39]++;
      scores.set(key, score);
    }
    // 按分数排序并删除低分条目
    const sortedEntries =
    /* istanbul ignore next */
    (cov_26et9mbbg().s[40]++, Array.from(scores.entries()).sort((a, b) => {
      /* istanbul ignore next */
      cov_26et9mbbg().f[7]++;
      cov_26et9mbbg().s[41]++;
      return a[1] - b[1];
    }));
    let freedSpace =
    /* istanbul ignore next */
    (cov_26et9mbbg().s[42]++, 0);
    /* istanbul ignore next */
    cov_26et9mbbg().s[43]++;
    for (const [key] of sortedEntries) {
      const entry =
      /* istanbul ignore next */
      (cov_26et9mbbg().s[44]++, this.cache.get(key));
      /* istanbul ignore next */
      cov_26et9mbbg().s[45]++;
      this.cache.delete(key);
      /* istanbul ignore next */
      cov_26et9mbbg().s[46]++;
      freedSpace += entry.size;
      /* istanbul ignore next */
      cov_26et9mbbg().s[47]++;
      this.totalSize -= entry.size;
      /* istanbul ignore next */
      cov_26et9mbbg().s[48]++;
      if (this.totalSize + requiredSize <= this.options.maxSize) {
        /* istanbul ignore next */
        cov_26et9mbbg().b[6][0]++;
        cov_26et9mbbg().s[49]++;
        break;
      } else
      /* istanbul ignore next */
      {
        cov_26et9mbbg().b[6][1]++;
      }
    }
  }
  simplePrune(requiredSize) {
    /* istanbul ignore next */
    cov_26et9mbbg().f[8]++;
    // 简单地删除最旧的条目
    const entries =
    /* istanbul ignore next */
    (cov_26et9mbbg().s[50]++, Array.from(this.cache.entries()));
    /* istanbul ignore next */
    cov_26et9mbbg().s[51]++;
    entries.sort((a, b) => {
      /* istanbul ignore next */
      cov_26et9mbbg().f[9]++;
      cov_26et9mbbg().s[52]++;
      return a[1].timestamp - b[1].timestamp;
    });
    /* istanbul ignore next */
    cov_26et9mbbg().s[53]++;
    for (const [key, entry] of entries) {
      /* istanbul ignore next */
      cov_26et9mbbg().s[54]++;
      this.cache.delete(key);
      /* istanbul ignore next */
      cov_26et9mbbg().s[55]++;
      this.totalSize -= entry.size;
      /* istanbul ignore next */
      cov_26et9mbbg().s[56]++;
      if (this.totalSize + requiredSize <= this.options.maxSize) {
        /* istanbul ignore next */
        cov_26et9mbbg().b[7][0]++;
        cov_26et9mbbg().s[57]++;
        break;
      } else
      /* istanbul ignore next */
      {
        cov_26et9mbbg().b[7][1]++;
      }
    }
  }
  // 获取缓存统计信息
  getStats() {
    /* istanbul ignore next */
    cov_26et9mbbg().f[10]++;
    cov_26et9mbbg().s[58]++;
    return {
      totalSize: this.totalSize,
      itemCount: this.cache.size,
      maxSize: this.options.maxSize,
      utilization: this.totalSize / this.options.maxSize,
      averageAccessCount: this.calculateAverageAccessCount()
    };
  }
  calculateAverageAccessCount() {
    /* istanbul ignore next */
    cov_26et9mbbg().f[11]++;
    cov_26et9mbbg().s[59]++;
    if (this.cache.size === 0) {
      /* istanbul ignore next */
      cov_26et9mbbg().b[8][0]++;
      cov_26et9mbbg().s[60]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_26et9mbbg().b[8][1]++;
    }
    let total =
    /* istanbul ignore next */
    (cov_26et9mbbg().s[61]++, 0);
    /* istanbul ignore next */
    cov_26et9mbbg().s[62]++;
    for (const entry of this.cache.values()) {
      /* istanbul ignore next */
      cov_26et9mbbg().s[63]++;
      total += entry.accessCount;
    }
    /* istanbul ignore next */
    cov_26et9mbbg().s[64]++;
    return total / this.cache.size;
  }
}
/* istanbul ignore next */
cov_26et9mbbg().s[65]++;
exports.SmartCache = SmartCache;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,