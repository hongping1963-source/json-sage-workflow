cde7d96b33d966dd1187da3f0884116d
"use strict";

/* istanbul ignore next */
function cov_36z1qzgjy() {
  var path = "C:\\Users\\hongping\\CascadeProjects\\json-sage-ai-agent\\src\\agent\\JsonSageAI.ts";
  var hash = "e543aa6040a137b4bf3668c0048c01f4f21ba549";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\hongping\\CascadeProjects\\json-sage-ai-agent\\src\\agent\\JsonSageAI.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 4,
          column: 23
        },
        end: {
          line: 4,
          column: 48
        }
      },
      "3": {
        start: {
          line: 5,
          column: 24
        },
        end: {
          line: 5,
          column: 50
        }
      },
      "4": {
        start: {
          line: 6,
          column: 21
        },
        end: {
          line: 6,
          column: 52
        }
      },
      "5": {
        start: {
          line: 7,
          column: 29
        },
        end: {
          line: 7,
          column: 74
        }
      },
      "6": {
        start: {
          line: 8,
          column: 28
        },
        end: {
          line: 8,
          column: 72
        }
      },
      "7": {
        start: {
          line: 9,
          column: 29
        },
        end: {
          line: 9,
          column: 70
        }
      },
      "8": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 27
        }
      },
      "9": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "10": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 14,
          column: 75
        }
      },
      "11": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 15,
          column: 92
        }
      },
      "12": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 16,
          column: 79
        }
      },
      "13": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 38
        }
      },
      "14": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 75
        }
      },
      "15": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "16": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 78
        }
      },
      "17": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "18": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 75
        }
      },
      "19": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 32,
          column: 9
        }
      },
      "20": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 74
        }
      },
      "21": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "22": {
        start: {
          line: 36,
          column: 27
        },
        end: {
          line: 36,
          column: 57
        }
      },
      "23": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 48,
          column: 15
        }
      },
      "24": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 73
        }
      },
      "25": {
        start: {
          line: 56,
          column: 26
        },
        end: {
          line: 56,
          column: 36
        }
      },
      "26": {
        start: {
          line: 57,
          column: 25
        },
        end: {
          line: 57,
          column: 26
        }
      },
      "27": {
        start: {
          line: 58,
          column: 24
        },
        end: {
          line: 58,
          column: 25
        }
      },
      "28": {
        start: {
          line: 59,
          column: 26
        },
        end: {
          line: 59,
          column: 27
        }
      },
      "29": {
        start: {
          line: 60,
          column: 21
        },
        end: {
          line: 60,
          column: 23
        }
      },
      "30": {
        start: {
          line: 61,
          column: 24
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "31": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 226,
          column: 9
        }
      },
      "32": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 37
        }
      },
      "33": {
        start: {
          line: 70,
          column: 26
        },
        end: {
          line: 70,
          column: 28
        }
      },
      "34": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 33
        }
      },
      "35": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 88
        }
      },
      "36": {
        start: {
          line: 74,
          column: 30
        },
        end: {
          line: 74,
          column: 85
        }
      },
      "37": {
        start: {
          line: 76,
          column: 28
        },
        end: {
          line: 76,
          column: 87
        }
      },
      "38": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 52
        }
      },
      "39": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 38
        }
      },
      "40": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 34
        }
      },
      "41": {
        start: {
          line: 82,
          column: 36
        },
        end: {
          line: 82,
          column: 95
        }
      },
      "42": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 40
        }
      },
      "43": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 98,
          column: 13
        }
      },
      "44": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 92
        }
      },
      "45": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 64
        }
      },
      "46": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 94,
          column: 17
        }
      },
      "47": {
        start: {
          line: 90,
          column: 20
        },
        end: {
          line: 90,
          column: 32
        }
      },
      "48": {
        start: {
          line: 93,
          column: 20
        },
        end: {
          line: 93,
          column: 34
        }
      },
      "49": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 82
        }
      },
      "50": {
        start: {
          line: 99,
          column: 27
        },
        end: {
          line: 110,
          column: 13
        }
      },
      "51": {
        start: {
          line: 106,
          column: 56
        },
        end: {
          line: 106,
          column: 71
        }
      },
      "52": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 133,
          column: 13
        }
      },
      "53": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 132,
          column: 17
        }
      },
      "54": {
        start: {
          line: 114,
          column: 20
        },
        end: {
          line: 114,
          column: 43
        }
      },
      "55": {
        start: {
          line: 115,
          column: 20
        },
        end: {
          line: 115,
          column: 108
        }
      },
      "56": {
        start: {
          line: 116,
          column: 20
        },
        end: {
          line: 116,
          column: 68
        }
      },
      "57": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 122,
          column: 21
        }
      },
      "58": {
        start: {
          line: 118,
          column: 24
        },
        end: {
          line: 118,
          column: 36
        }
      },
      "59": {
        start: {
          line: 121,
          column: 24
        },
        end: {
          line: 121,
          column: 38
        }
      },
      "60": {
        start: {
          line: 125,
          column: 37
        },
        end: {
          line: 125,
          column: 97
        }
      },
      "61": {
        start: {
          line: 126,
          column: 20
        },
        end: {
          line: 126,
          column: 42
        }
      },
      "62": {
        start: {
          line: 127,
          column: 20
        },
        end: {
          line: 131,
          column: 23
        }
      },
      "63": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 156,
          column: 13
        }
      },
      "64": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 155,
          column: 17
        }
      },
      "65": {
        start: {
          line: 137,
          column: 20
        },
        end: {
          line: 137,
          column: 43
        }
      },
      "66": {
        start: {
          line: 138,
          column: 20
        },
        end: {
          line: 138,
          column: 93
        }
      },
      "67": {
        start: {
          line: 139,
          column: 20
        },
        end: {
          line: 139,
          column: 68
        }
      },
      "68": {
        start: {
          line: 140,
          column: 20
        },
        end: {
          line: 145,
          column: 21
        }
      },
      "69": {
        start: {
          line: 141,
          column: 24
        },
        end: {
          line: 141,
          column: 36
        }
      },
      "70": {
        start: {
          line: 144,
          column: 24
        },
        end: {
          line: 144,
          column: 38
        }
      },
      "71": {
        start: {
          line: 148,
          column: 37
        },
        end: {
          line: 148,
          column: 97
        }
      },
      "72": {
        start: {
          line: 149,
          column: 20
        },
        end: {
          line: 149,
          column: 42
        }
      },
      "73": {
        start: {
          line: 150,
          column: 20
        },
        end: {
          line: 154,
          column: 23
        }
      },
      "74": {
        start: {
          line: 158,
          column: 34
        },
        end: {
          line: 158,
          column: 56
        }
      },
      "75": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 167,
          column: 15
        }
      },
      "76": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 176,
          column: 15
        }
      },
      "77": {
        start: {
          line: 178,
          column: 44
        },
        end: {
          line: 178,
          column: 77
        }
      },
      "78": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 181,
          column: 13
        }
      },
      "79": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 180,
          column: 94
        }
      },
      "80": {
        start: {
          line: 180,
          column: 82
        },
        end: {
          line: 180,
          column: 91
        }
      },
      "81": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 189,
          column: 14
        }
      },
      "82": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 201,
          column: 15
        }
      },
      "83": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 214,
          column: 13
        }
      },
      "84": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 213,
          column: 18
        }
      },
      "85": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 225,
          column: 14
        }
      },
      "86": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 55
        }
      },
      "87": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 238,
          column: 46
        }
      },
      "88": {
        start: {
          line: 244,
          column: 39
        },
        end: {
          line: 244,
          column: 83
        }
      },
      "89": {
        start: {
          line: 245,
          column: 33
        },
        end: {
          line: 245,
          column: 67
        }
      },
      "90": {
        start: {
          line: 247,
          column: 41
        },
        end: {
          line: 255,
          column: 11
        }
      },
      "91": {
        start: {
          line: 247,
          column: 74
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "92": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 256,
          column: 72
        }
      },
      "93": {
        start: {
          line: 262,
          column: 22
        },
        end: {
          line: 262,
          column: 25
        }
      },
      "94": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 266,
          column: 9
        }
      },
      "95": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 59
        }
      },
      "96": {
        start: {
          line: 268,
          column: 32
        },
        end: {
          line: 268,
          column: 83
        }
      },
      "97": {
        start: {
          line: 268,
          column: 58
        },
        end: {
          line: 268,
          column: 82
        }
      },
      "98": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 271,
          column: 9
        }
      },
      "99": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 270,
          column: 53
        }
      },
      "100": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 272,
          column: 49
        }
      },
      "101": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 280,
          column: 9
        }
      },
      "102": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 279,
          column: 29
        }
      },
      "103": {
        start: {
          line: 281,
          column: 22
        },
        end: {
          line: 281,
          column: 25
        }
      },
      "104": {
        start: {
          line: 282,
          column: 29
        },
        end: {
          line: 282,
          column: 63
        }
      },
      "105": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 286,
          column: 9
        }
      },
      "106": {
        start: {
          line: 284,
          column: 38
        },
        end: {
          line: 284,
          column: 63
        }
      },
      "107": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 285,
          column: 27
        }
      },
      "108": {
        start: {
          line: 288,
          column: 26
        },
        end: {
          line: 288,
          column: 104
        }
      },
      "109": {
        start: {
          line: 288,
          column: 61
        },
        end: {
          line: 288,
          column: 78
        }
      },
      "110": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 291,
          column: 9
        }
      },
      "111": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 27
        }
      },
      "112": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 49
        }
      },
      "113": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 300,
          column: 9
        }
      },
      "114": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 29
        }
      },
      "115": {
        start: {
          line: 301,
          column: 22
        },
        end: {
          line: 301,
          column: 25
        }
      },
      "116": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 316,
          column: 9
        }
      },
      "117": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 44
        }
      },
      "118": {
        start: {
          line: 306,
          column: 31
        },
        end: {
          line: 306,
          column: 92
        }
      },
      "119": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 309,
          column: 13
        }
      },
      "120": {
        start: {
          line: 308,
          column: 16
        },
        end: {
          line: 308,
          column: 31
        }
      },
      "121": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 312,
          column: 13
        }
      },
      "122": {
        start: {
          line: 311,
          column: 16
        },
        end: {
          line: 311,
          column: 31
        }
      },
      "123": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 315,
          column: 24
        }
      },
      "124": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 317,
          column: 49
        }
      },
      "125": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 322,
          column: 9
        }
      },
      "126": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 321,
          column: 62
        }
      },
      "127": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "128": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 64
        }
      },
      "129": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 328,
          column: 9
        }
      },
      "130": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 327,
          column: 63
        }
      },
      "131": {
        start: {
          line: 331,
          column: 32
        },
        end: {
          line: 334,
          column: 9
        }
      },
      "132": {
        start: {
          line: 333,
          column: 48
        },
        end: {
          line: 333,
          column: 64
        }
      },
      "133": {
        start: {
          line: 333,
          column: 79
        },
        end: {
          line: 333,
          column: 89
        }
      },
      "134": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 335,
          column: 31
        }
      },
      "135": {
        start: {
          line: 338,
          column: 29
        },
        end: {
          line: 338,
          column: 31
        }
      },
      "136": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 341,
          column: 9
        }
      },
      "137": {
        start: {
          line: 340,
          column: 12
        },
        end: {
          line: 340,
          column: 57
        }
      },
      "138": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 342,
          column: 28
        }
      },
      "139": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 351,
          column: 10
        }
      },
      "140": {
        start: {
          line: 354,
          column: 25
        },
        end: {
          line: 354,
          column: 27
        }
      },
      "141": {
        start: {
          line: 355,
          column: 24
        },
        end: {
          line: 355,
          column: 65
        }
      },
      "142": {
        start: {
          line: 357,
          column: 30
        },
        end: {
          line: 357,
          column: 57
        }
      },
      "143": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 360,
          column: 9
        }
      },
      "144": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 359,
          column: 61
        }
      },
      "145": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 361,
          column: 24
        }
      },
      "146": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 364,
          column: 46
        }
      },
      "147": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 373,
          column: 9
        }
      },
      "148": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 368,
          column: 45
        }
      },
      "149": {
        start: {
          line: 369,
          column: 12
        },
        end: {
          line: 369,
          column: 38
        }
      },
      "150": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 372,
          column: 71
        }
      },
      "151": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 379,
          column: 60
        }
      },
      "152": {
        start: {
          line: 385,
          column: 8
        },
        end: {
          line: 385,
          column: 50
        }
      },
      "153": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 391,
          column: 33
        }
      },
      "154": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 392,
          column: 40
        }
      },
      "155": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 393,
          column: 46
        }
      },
      "156": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 415,
          column: 9
        }
      },
      "157": {
        start: {
          line: 401,
          column: 24
        },
        end: {
          line: 401,
          column: 38
        }
      },
      "158": {
        start: {
          line: 402,
          column: 24
        },
        end: {
          line: 402,
          column: 33
        }
      },
      "159": {
        start: {
          line: 403,
          column: 29
        },
        end: {
          line: 403,
          column: 48
        }
      },
      "160": {
        start: {
          line: 404,
          column: 26
        },
        end: {
          line: 404,
          column: 40
        }
      },
      "161": {
        start: {
          line: 405,
          column: 12
        },
        end: {
          line: 408,
          column: 14
        }
      },
      "162": {
        start: {
          line: 407,
          column: 120
        },
        end: {
          line: 407,
          column: 131
        }
      },
      "163": {
        start: {
          line: 411,
          column: 12
        },
        end: {
          line: 414,
          column: 14
        }
      },
      "164": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 418,
          column: 38
        }
      },
      "165": {
        start: {
          line: 421,
          column: 0
        },
        end: {
          line: 421,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 24
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 27
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 25
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 34
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        loc: {
          start: {
            line: 54,
            column: 31
          },
          end: {
            line: 227,
            column: 5
          }
        },
        line: 54
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 106,
            column: 45
          },
          end: {
            line: 106,
            column: 46
          }
        },
        loc: {
          start: {
            line: 106,
            column: 56
          },
          end: {
            line: 106,
            column: 71
          }
        },
        line: 106
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 180,
            column: 77
          },
          end: {
            line: 180,
            column: 78
          }
        },
        loc: {
          start: {
            line: 180,
            column: 82
          },
          end: {
            line: 180,
            column: 91
          }
        },
        line: 180
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 231,
            column: 4
          },
          end: {
            line: 231,
            column: 5
          }
        },
        loc: {
          start: {
            line: 231,
            column: 38
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 231
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        },
        loc: {
          start: {
            line: 237,
            column: 37
          },
          end: {
            line: 239,
            column: 5
          }
        },
        line: 237
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 243,
            column: 5
          }
        },
        loc: {
          start: {
            line: 243,
            column: 33
          },
          end: {
            line: 257,
            column: 5
          }
        },
        line: 243
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 247,
            column: 62
          },
          end: {
            line: 247,
            column: 63
          }
        },
        loc: {
          start: {
            line: 247,
            column: 74
          },
          end: {
            line: 255,
            column: 9
          }
        },
        line: 247
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 261,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        },
        loc: {
          start: {
            line: 261,
            column: 34
          },
          end: {
            line: 273,
            column: 5
          }
        },
        line: 261
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 268,
            column: 53
          },
          end: {
            line: 268,
            column: 54
          }
        },
        loc: {
          start: {
            line: 268,
            column: 58
          },
          end: {
            line: 268,
            column: 82
          }
        },
        line: 268
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 277,
            column: 4
          },
          end: {
            line: 277,
            column: 5
          }
        },
        loc: {
          start: {
            line: 277,
            column: 39
          },
          end: {
            line: 293,
            column: 5
          }
        },
        line: 277
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 284,
            column: 30
          },
          end: {
            line: 284,
            column: 31
          }
        },
        loc: {
          start: {
            line: 284,
            column: 38
          },
          end: {
            line: 284,
            column: 63
          }
        },
        line: 284
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 288,
            column: 46
          },
          end: {
            line: 288,
            column: 47
          }
        },
        loc: {
          start: {
            line: 288,
            column: 61
          },
          end: {
            line: 288,
            column: 78
          }
        },
        line: 288
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 297,
            column: 4
          },
          end: {
            line: 297,
            column: 5
          }
        },
        loc: {
          start: {
            line: 297,
            column: 35
          },
          end: {
            line: 318,
            column: 5
          }
        },
        line: 297
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 319,
            column: 4
          },
          end: {
            line: 319,
            column: 5
          }
        },
        loc: {
          start: {
            line: 319,
            column: 24
          },
          end: {
            line: 329,
            column: 5
          }
        },
        line: 319
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 330,
            column: 4
          },
          end: {
            line: 330,
            column: 5
          }
        },
        loc: {
          start: {
            line: 330,
            column: 59
          },
          end: {
            line: 336,
            column: 5
          }
        },
        line: 330
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 333,
            column: 39
          },
          end: {
            line: 333,
            column: 40
          }
        },
        loc: {
          start: {
            line: 333,
            column: 48
          },
          end: {
            line: 333,
            column: 64
          }
        },
        line: 333
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 333,
            column: 70
          },
          end: {
            line: 333,
            column: 71
          }
        },
        loc: {
          start: {
            line: 333,
            column: 79
          },
          end: {
            line: 333,
            column: 89
          }
        },
        line: 333
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 337,
            column: 4
          },
          end: {
            line: 337,
            column: 5
          }
        },
        loc: {
          start: {
            line: 337,
            column: 56
          },
          end: {
            line: 343,
            column: 5
          }
        },
        line: 337
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 344,
            column: 5
          }
        },
        loc: {
          start: {
            line: 344,
            column: 54
          },
          end: {
            line: 352,
            column: 5
          }
        },
        line: 344
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 353,
            column: 4
          },
          end: {
            line: 353,
            column: 5
          }
        },
        loc: {
          start: {
            line: 353,
            column: 24
          },
          end: {
            line: 362,
            column: 5
          }
        },
        line: 353
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 363,
            column: 4
          },
          end: {
            line: 363,
            column: 5
          }
        },
        loc: {
          start: {
            line: 363,
            column: 16
          },
          end: {
            line: 365,
            column: 5
          }
        },
        line: 363
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 366,
            column: 4
          },
          end: {
            line: 366,
            column: 5
          }
        },
        loc: {
          start: {
            line: 366,
            column: 18
          },
          end: {
            line: 374,
            column: 5
          }
        },
        line: 366
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 378,
            column: 4
          },
          end: {
            line: 378,
            column: 5
          }
        },
        loc: {
          start: {
            line: 378,
            column: 28
          },
          end: {
            line: 380,
            column: 5
          }
        },
        line: 378
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 384,
            column: 4
          },
          end: {
            line: 384,
            column: 5
          }
        },
        loc: {
          start: {
            line: 384,
            column: 26
          },
          end: {
            line: 386,
            column: 5
          }
        },
        line: 384
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 390,
            column: 4
          },
          end: {
            line: 390,
            column: 5
          }
        },
        loc: {
          start: {
            line: 390,
            column: 30
          },
          end: {
            line: 394,
            column: 5
          }
        },
        line: 390
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 398,
            column: 4
          },
          end: {
            line: 398,
            column: 5
          }
        },
        loc: {
          start: {
            line: 398,
            column: 33
          },
          end: {
            line: 416,
            column: 5
          }
        },
        line: 398
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 407,
            column: 111
          },
          end: {
            line: 407,
            column: 112
          }
        },
        loc: {
          start: {
            line: 407,
            column: 120
          },
          end: {
            line: 407,
            column: 131
          }
        },
        line: 407
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 417,
            column: 4
          },
          end: {
            line: 417,
            column: 5
          }
        },
        loc: {
          start: {
            line: 417,
            column: 26
          },
          end: {
            line: 419,
            column: 5
          }
        },
        line: 417
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 27,
            column: 28
          }
        }, {
          start: {
            line: 27,
            column: 33
          },
          end: {
            line: 27,
            column: 53
          }
        }, {
          start: {
            line: 27,
            column: 57
          },
          end: {
            line: 27,
            column: 80
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 30
          }
        }, {
          start: {
            line: 30,
            column: 35
          },
          end: {
            line: 30,
            column: 57
          }
        }, {
          start: {
            line: 30,
            column: 61
          },
          end: {
            line: 30,
            column: 83
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 89,
            column: 16
          },
          end: {
            line: 94,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 16
          },
          end: {
            line: 94,
            column: 17
          }
        }, {
          start: {
            line: 92,
            column: 21
          },
          end: {
            line: 94,
            column: 17
          }
        }],
        line: 89
      },
      "6": {
        loc: {
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 133,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 133,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "7": {
        loc: {
          start: {
            line: 112,
            column: 16
          },
          end: {
            line: 112,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 112,
            column: 64
          },
          end: {
            line: 112,
            column: 70
          }
        }, {
          start: {
            line: 112,
            column: 73
          },
          end: {
            line: 112,
            column: 95
          }
        }],
        line: 112
      },
      "8": {
        loc: {
          start: {
            line: 112,
            column: 16
          },
          end: {
            line: 112,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 16
          },
          end: {
            line: 112,
            column: 44
          }
        }, {
          start: {
            line: 112,
            column: 48
          },
          end: {
            line: 112,
            column: 61
          }
        }],
        line: 112
      },
      "9": {
        loc: {
          start: {
            line: 117,
            column: 20
          },
          end: {
            line: 122,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 20
          },
          end: {
            line: 122,
            column: 21
          }
        }, {
          start: {
            line: 120,
            column: 25
          },
          end: {
            line: 122,
            column: 21
          }
        }],
        line: 117
      },
      "10": {
        loc: {
          start: {
            line: 125,
            column: 48
          },
          end: {
            line: 125,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 125,
            column: 73
          },
          end: {
            line: 125,
            column: 86
          }
        }, {
          start: {
            line: 125,
            column: 89
          },
          end: {
            line: 125,
            column: 95
          }
        }],
        line: 125
      },
      "11": {
        loc: {
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 156,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 156,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "12": {
        loc: {
          start: {
            line: 135,
            column: 16
          },
          end: {
            line: 135,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 135,
            column: 64
          },
          end: {
            line: 135,
            column: 70
          }
        }, {
          start: {
            line: 135,
            column: 73
          },
          end: {
            line: 135,
            column: 91
          }
        }],
        line: 135
      },
      "13": {
        loc: {
          start: {
            line: 135,
            column: 16
          },
          end: {
            line: 135,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 16
          },
          end: {
            line: 135,
            column: 44
          }
        }, {
          start: {
            line: 135,
            column: 48
          },
          end: {
            line: 135,
            column: 61
          }
        }],
        line: 135
      },
      "14": {
        loc: {
          start: {
            line: 140,
            column: 20
          },
          end: {
            line: 145,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 20
          },
          end: {
            line: 145,
            column: 21
          }
        }, {
          start: {
            line: 143,
            column: 25
          },
          end: {
            line: 145,
            column: 21
          }
        }],
        line: 140
      },
      "15": {
        loc: {
          start: {
            line: 148,
            column: 48
          },
          end: {
            line: 148,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 148,
            column: 73
          },
          end: {
            line: 148,
            column: 86
          }
        }, {
          start: {
            line: 148,
            column: 89
          },
          end: {
            line: 148,
            column: 95
          }
        }],
        line: 148
      },
      "16": {
        loc: {
          start: {
            line: 179,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "17": {
        loc: {
          start: {
            line: 187,
            column: 30
          },
          end: {
            line: 187,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 187,
            column: 50
          },
          end: {
            line: 187,
            column: 56
          }
        }, {
          start: {
            line: 187,
            column: 59
          },
          end: {
            line: 187,
            column: 68
          }
        }],
        line: 187
      },
      "18": {
        loc: {
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 214,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 214,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "19": {
        loc: {
          start: {
            line: 206,
            column: 30
          },
          end: {
            line: 206,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 30
          },
          end: {
            line: 206,
            column: 40
          }
        }, {
          start: {
            line: 206,
            column: 44
          },
          end: {
            line: 206,
            column: 59
          }
        }],
        line: 206
      },
      "20": {
        loc: {
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 264
      },
      "21": {
        loc: {
          start: {
            line: 269,
            column: 8
          },
          end: {
            line: 271,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 269,
            column: 8
          },
          end: {
            line: 271,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 269
      },
      "22": {
        loc: {
          start: {
            line: 278,
            column: 8
          },
          end: {
            line: 280,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 8
          },
          end: {
            line: 280,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 278
      },
      "23": {
        loc: {
          start: {
            line: 284,
            column: 8
          },
          end: {
            line: 286,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 8
          },
          end: {
            line: 286,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 284
      },
      "24": {
        loc: {
          start: {
            line: 284,
            column: 38
          },
          end: {
            line: 284,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 284,
            column: 38
          },
          end: {
            line: 284,
            column: 43
          }
        }, {
          start: {
            line: 284,
            column: 47
          },
          end: {
            line: 284,
            column: 63
          }
        }],
        line: 284
      },
      "25": {
        loc: {
          start: {
            line: 289,
            column: 8
          },
          end: {
            line: 291,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 8
          },
          end: {
            line: 291,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 289
      },
      "26": {
        loc: {
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "27": {
        loc: {
          start: {
            line: 307,
            column: 12
          },
          end: {
            line: 309,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 307,
            column: 12
          },
          end: {
            line: 309,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 307
      },
      "28": {
        loc: {
          start: {
            line: 310,
            column: 12
          },
          end: {
            line: 312,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 310,
            column: 12
          },
          end: {
            line: 312,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 310
      },
      "29": {
        loc: {
          start: {
            line: 320,
            column: 8
          },
          end: {
            line: 322,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 320,
            column: 8
          },
          end: {
            line: 322,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 320
      },
      "30": {
        loc: {
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 323
      },
      "31": {
        loc: {
          start: {
            line: 323,
            column: 12
          },
          end: {
            line: 323,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 323,
            column: 12
          },
          end: {
            line: 323,
            column: 45
          }
        }, {
          start: {
            line: 323,
            column: 49
          },
          end: {
            line: 323,
            column: 71
          }
        }],
        line: 323
      },
      "32": {
        loc: {
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 328,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 328,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "33": {
        loc: {
          start: {
            line: 330,
            column: 34
          },
          end: {
            line: 330,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 330,
            column: 44
          },
          end: {
            line: 330,
            column: 46
          }
        }],
        line: 330
      },
      "34": {
        loc: {
          start: {
            line: 358,
            column: 8
          },
          end: {
            line: 360,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 358,
            column: 8
          },
          end: {
            line: 360,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 358
      },
      "35": {
        loc: {
          start: {
            line: 407,
            column: 24
          },
          end: {
            line: 407,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 407,
            column: 32
          },
          end: {
            line: 407,
            column: 41
          }
        }, {
          start: {
            line: 407,
            column: 44
          },
          end: {
            line: 407,
            column: 132
          }
        }],
        line: 407
      },
      "36": {
        loc: {
          start: {
            line: 407,
            column: 44
          },
          end: {
            line: 407,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 407,
            column: 95
          },
          end: {
            line: 407,
            column: 101
          }
        }, {
          start: {
            line: 407,
            column: 104
          },
          end: {
            line: 407,
            column: 132
          }
        }],
        line: 407
      },
      "37": {
        loc: {
          start: {
            line: 407,
            column: 44
          },
          end: {
            line: 407,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 407,
            column: 44
          },
          end: {
            line: 407,
            column: 75
          }
        }, {
          start: {
            line: 407,
            column: 79
          },
          end: {
            line: 407,
            column: 92
          }
        }],
        line: 407
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\hongping\\CascadeProjects\\json-sage-ai-agent\\src\\agent\\JsonSageAI.ts",
      mappings: "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",
      names: [],
      sources: ["C:\\Users\\hongping\\CascadeProjects\\json-sage-ai-agent\\src\\agent\\JsonSageAI.ts"],
      sourcesContent: ["import {\n    AgentConfig,\n    SchemaGenerationTask,\n    SchemaGenerationOptions,\n    AgentResult,\n    JsonInsight,\n    ErrorContext,\n    SuccessResponse,\n    ErrorResponse,\n    PerformanceMetrics,\n    LearningFeedback,\n    OptimizationSuggestion,\n    LearningInsight,\n    ValidationResult\n} from '../types';\nimport { JsonAnalyzer } from './JsonAnalyzer';\nimport { ConfigManager } from './ConfigManager';\nimport { ErrorHandler } from '../errors/ErrorHandler';\nimport {\n    ValidationError,\n    SchemaGenerationError,\n    APIError,\n    ConfigurationError\n} from '../errors/AgentError';\nimport { PerformanceMonitor } from '../optimization/PerformanceMonitor';\nimport { ContinuousLearner } from '../optimization/ContinuousLearner';\nimport { Workflow } from '../workflow/json-sage-workflow';\n\nexport class JsonSageAI {\n    private workflow!: Workflow;\n    private configManager: ConfigManager;\n    private insights: JsonInsight[] = [];\n    private performanceMonitor: PerformanceMonitor;\n    private learner: ContinuousLearner;\n\n    constructor(config: AgentConfig) {\n        try {\n            this.configManager = new ConfigManager(config);\n            this.performanceMonitor = PerformanceMonitor.getInstance();\n            this.learner = ContinuousLearner.getInstance();\n            this.initializeWorkflow();\n        } catch (error) {\n            throw new ConfigurationError('\u521D\u59CB\u5316\u5931\u8D25\uFF1A\u914D\u7F6E\u65E0\u6548', error);\n        }\n    }\n\n    private validateConfig(config: AgentConfig): void {\n        if (!config.deepseekApiKey) {\n            throw new ValidationError('\u7F3A\u5C11\u5FC5\u9700\u7684\u914D\u7F6E\u9879\uFF1AdeepseekApiKey');\n        }\n\n        if (config.maxTokens && (config.maxTokens < 1 || config.maxTokens > 8000)) {\n            throw new ValidationError('maxTokens\u5FC5\u987B\u57281-8000\u4E4B\u95F4');\n        }\n\n        if (config.temperature && (config.temperature < 0 || config.temperature > 1)) {\n            throw new ValidationError('temperature\u5FC5\u987B\u57280-1\u4E4B\u95F4');\n        }\n    }\n\n    private initializeWorkflow() {\n        try {\n            const config = this.configManager.getConfig();\n            this.workflow = new Workflow({\n                schema: {\n                    useAI: true,\n                    deepseek: {\n                        apiKey: config.deepseekApiKey,\n                        model: config.model,\n                        maxTokens: config.maxTokens,\n                        temperature: config.temperature\n                    },\n                    caching: config.caching\n                }\n            });\n        } catch (error) {\n            throw new ConfigurationError('\u5DE5\u4F5C\u6D41\u521D\u59CB\u5316\u5931\u8D25', error);\n        }\n    }\n\n    async generateSchema(task: SchemaGenerationTask): Promise<SuccessResponse<AgentResult> | ErrorResponse> {\n        const startTime = Date.now();\n        let tokenUsage = 0;\n        let cacheHits = 0;\n        let cacheMisses = 0;\n        let errors: string[] = [];\n\n        const context: ErrorContext = {\n            operation: 'generateSchema',\n            input: task,\n            state: this.configManager.getConfig(),\n            startTime\n        };\n\n        try {\n            // \u9A8C\u8BC1\u8F93\u5165\n            this.validateInput(task);\n\n            const steps: string[] = [];\n\n            // \u5206\u6790JSON\u6570\u636E\u7ED3\u6784\n            steps.push('\u5206\u6790\u6570\u636E\u7ED3\u6784');\n            this.insights = JsonAnalyzer.analyzeStructure(task.jsonData);\n            const fieldInfo = JsonAnalyzer.getFieldInfo(task.jsonData);\n\n            // \u6839\u636E\u5206\u6790\u7ED3\u679C\u81EA\u9002\u5E94\u8C03\u6574\u914D\u7F6E\n            const metrics = JsonAnalyzer.calculateMetrics(task.jsonData);\n            this.configManager.adaptConfig(metrics);\n            \n            // \u91CD\u65B0\u521D\u59CB\u5316\u5DE5\u4F5C\u6D41\u4EE5\u5E94\u7528\u65B0\u914D\u7F6E\n            this.initializeWorkflow();\n            steps.push('\u81EA\u9002\u5E94\u4F18\u5316\u914D\u7F6E');\n\n            // \u6839\u636E\u5206\u6790\u7ED3\u679C\u4F18\u5316\u914D\u7F6E\n            const enhancedOptions = this.enhanceOptionsBasedOnAnalysis(task.options, fieldInfo);\n\n            // \u751F\u6210Schema\n            steps.push('\u751F\u6210JSON Schema');\n            let schema;\n            try {\n                schema = await this.workflow.generateSchema(task.jsonData, enhancedOptions);\n                tokenUsage += this.workflow.getLastTokenUsage();\n                if (this.workflow.wasLastResponseCached()) {\n                    cacheHits++;\n                } else {\n                    cacheMisses++;\n                }\n            } catch (error) {\n                throw new SchemaGenerationError('Schema\u751F\u6210\u5931\u8D25', error);\n            }\n\n            const result: AgentResult = {\n                schema,\n                metadata: {\n                    executionTime: Date.now() - startTime,\n                    steps,\n                    errors,\n                    insights: [\n                        ...this.insights.map(insight => insight.message),\n                        ...this.getConfigInsights()\n                    ]\n                }\n            };\n\n            // \u751F\u6210\u5B57\u6BB5\u63CF\u8FF0\n            if (task.options?.includeDescriptions) {\n                try {\n                    steps.push('\u751F\u6210\u667A\u80FD\u5B57\u6BB5\u63CF\u8FF0');\n                    result.descriptions = await this.generateEnhancedDescriptions(task.jsonData, fieldInfo);\n                    tokenUsage += this.workflow.getLastTokenUsage();\n                    if (this.workflow.wasLastResponseCached()) {\n                        cacheHits++;\n                    } else {\n                        cacheMisses++;\n                    }\n                } catch (error) {\n                    const errorMsg = `\u63CF\u8FF0\u751F\u6210\u5931\u8D25: ${error instanceof Error ? error.message : '\u672A\u77E5\u9519\u8BEF'}`;\n                    errors.push(errorMsg);\n                    this.insights.push({\n                        type: 'data_quality',\n                        message: '\u5B57\u6BB5\u63CF\u8FF0\u751F\u6210\u8FC7\u7A0B\u4E2D\u9047\u5230\u95EE\u9898\uFF0C\u5EFA\u8BAE\u68C0\u67E5\u6570\u636E\u7ED3\u6784',\n                        severity: 'warning'\n                    });\n                }\n            }\n\n            // \u751F\u6210\u793A\u4F8B\u6570\u636E\n            if (task.options?.includeExamples) {\n                try {\n                    steps.push('\u751F\u6210\u5B9E\u7528\u793A\u4F8B\u6570\u636E');\n                    result.examples = await this.generateEnhancedExamples(schema, fieldInfo);\n                    tokenUsage += this.workflow.getLastTokenUsage();\n                    if (this.workflow.wasLastResponseCached()) {\n                        cacheHits++;\n                    } else {\n                        cacheMisses++;\n                    }\n                } catch (error) {\n                    const errorMsg = `\u793A\u4F8B\u751F\u6210\u5931\u8D25: ${error instanceof Error ? error.message : '\u672A\u77E5\u9519\u8BEF'}`;\n                    errors.push(errorMsg);\n                    this.insights.push({\n                        type: 'data_quality',\n                        message: '\u793A\u4F8B\u6570\u636E\u751F\u6210\u9047\u5230\u95EE\u9898\uFF0C\u5EFA\u8BAE\u624B\u52A8\u63D0\u4F9B\u793A\u4F8B',\n                        severity: 'warning'\n                    });\n                }\n            }\n\n            // \u8BB0\u5F55\u6027\u80FD\u6307\u6807\n            const executionTime = Date.now() - startTime;\n            this.recordPerformanceMetrics({\n                executionTime,\n                tokenUsage,\n                cacheHits,\n                cacheMisses,\n                successCount: 1,\n                errorCount: 0,\n                timestamp: Date.now()\n            });\n\n            // \u8BB0\u5F55\u5B66\u4E60\u53CD\u9988\n            this.recordLearningFeedback({\n                source: 'automated',\n                schemaQuality: this.estimateSchemaQuality(result),\n                descriptionQuality: this.estimateDescriptionQuality(result),\n                exampleQuality: this.estimateExampleQuality(result),\n                currentConfig: this.configManager.getConfig(),\n                timestamp: Date.now()\n            });\n\n            // \u83B7\u53D6\u4F18\u5316\u5EFA\u8BAE\n            const optimizationSuggestions = this.getOptimizationSuggestions();\n            if (optimizationSuggestions.length > 0) {\n                result.metadata.insights.push(\n                    ...optimizationSuggestions.map(s => s.message)\n                );\n            }\n\n            return {\n                success: true,\n                data: result,\n                metadata: {\n                    executionTime,\n                    warnings: errors.length > 0 ? errors : undefined\n                }\n            };\n        } catch (error) {\n            // \u8BB0\u5F55\u5931\u8D25\u6307\u6807\n            this.recordPerformanceMetrics({\n                executionTime: Date.now() - startTime,\n                tokenUsage,\n                cacheHits,\n                cacheMisses,\n                successCount: 0,\n                errorCount: 1,\n                timestamp: Date.now()\n            });\n\n            if (error instanceof Error) {\n                return {\n                    success: false,\n                    error: {\n                        code: error.name || 'UNKNOWN_ERROR',\n                        message: error.message,\n                        details: error\n                    },\n                    metadata: {\n                        executionTime: Date.now() - startTime\n                    }\n                };\n            }\n\n            return {\n                success: false,\n                error: {\n                    code: 'UNKNOWN_ERROR',\n                    message: '\u53D1\u751F\u672A\u77E5\u9519\u8BEF',\n                    details: error\n                },\n                metadata: {\n                    executionTime: Date.now() - startTime\n                }\n            };\n        }\n    }\n\n    /**\n     * \u8BB0\u5F55\u6027\u80FD\u6307\u6807\n     */\n    private recordPerformanceMetrics(metrics: PerformanceMetrics): void {\n        this.performanceMonitor.recordMetrics(metrics);\n    }\n\n    /**\n     * \u8BB0\u5F55\u5B66\u4E60\u53CD\u9988\n     */\n    private recordLearningFeedback(feedback: LearningFeedback): void {\n        this.learner.recordFeedback(feedback);\n    }\n\n    /**\n     * \u83B7\u53D6\u4F18\u5316\u5EFA\u8BAE\n     */\n    private getOptimizationSuggestions(): OptimizationSuggestion[] {\n        const performanceSuggestions = this.performanceMonitor.analyzePerformance();\n        const learningInsights = this.learner.getLearningInsights();\n\n        // \u5C06\u5B66\u4E60\u6D1E\u5BDF\u8F6C\u6362\u4E3A\u4F18\u5316\u5EFA\u8BAE\n        const learningBasedSuggestions = learningInsights.map(insight => ({\n            type: 'optimization' as const,\n            metric: insight.aspect,\n            severity: 'info' as const,\n            message: insight.message,\n            currentValue: insight.score,\n            threshold: 0.7, // \u8D28\u91CF\u9608\u503C\n            suggestion: insight.suggestion\n        }));\n\n        return [...performanceSuggestions, ...learningBasedSuggestions];\n    }\n\n    /**\n     * \u4F30\u8BA1Schema\u8D28\u91CF\n     */\n    private estimateSchemaQuality(result: AgentResult): number {\n        let quality = 1.0;\n\n        // \u6839\u636E\u9519\u8BEF\u6570\u91CF\u964D\u4F4E\u8D28\u91CF\u5206\u6570\n        if (result.metadata.errors.length > 0) {\n            quality -= result.metadata.errors.length * 0.1;\n        }\n\n        // \u6839\u636E\u8B66\u544A\u7C7B\u578B\u7684\u6D1E\u5BDF\u964D\u4F4E\u8D28\u91CF\u5206\u6570\n        const warningInsights = this.insights.filter(i => i.severity === 'warning');\n        if (warningInsights.length > 0) {\n            quality -= warningInsights.length * 0.05;\n        }\n\n        return Math.max(0, Math.min(1, quality));\n    }\n\n    /**\n     * \u4F30\u8BA1\u63CF\u8FF0\u8D28\u91CF\n     */\n    private estimateDescriptionQuality(result: AgentResult): number | undefined {\n        if (!result.descriptions) {\n            return undefined;\n        }\n\n        let quality = 1.0;\n        const descriptions = Object.values(result.descriptions);\n\n        // \u68C0\u67E5\u63CF\u8FF0\u7684\u5B8C\u6574\u6027\n        if (descriptions.some(desc => !desc || desc.length < 10)) {\n            quality -= 0.2;\n        }\n\n        // \u68C0\u67E5\u63CF\u8FF0\u7684\u4FE1\u606F\u91CF\n        const avgLength = descriptions.reduce((sum, desc) => sum + desc.length, 0) / descriptions.length;\n        if (avgLength < 30) {\n            quality -= 0.1;\n        }\n\n        return Math.max(0, Math.min(1, quality));\n    }\n\n    /**\n     * \u4F30\u8BA1\u793A\u4F8B\u8D28\u91CF\n     */\n    private estimateExampleQuality(result: AgentResult): number | undefined {\n        if (!result.examples) {\n            return undefined;\n        }\n\n        let quality = 1.0;\n\n        try {\n            // \u68C0\u67E5\u793A\u4F8B\u7684\u6709\u6548\u6027\n            JSON.stringify(result.examples);\n\n            // \u68C0\u67E5\u793A\u4F8B\u7684\u590D\u6742\u5EA6\n            const complexity = JsonAnalyzer.calculateMetrics(result.examples);\n            if (complexity.depth < 2) {\n                quality -= 0.1;\n            }\n            if (complexity.fieldCount < 5) {\n                quality -= 0.1;\n            }\n        } catch {\n            quality = 0;\n        }\n\n        return Math.max(0, Math.min(1, quality));\n    }\n\n    private validateInput(task: SchemaGenerationTask): void {\n        if (!task.jsonData) {\n            throw new ValidationError('\u7F3A\u5C11\u5FC5\u9700\u7684\u6570\u636E');\n        }\n\n        if (typeof task.jsonData !== 'object' || task.jsonData === null) {\n            throw new ValidationError('\u6570\u636E\u5FC5\u987B\u662F\u5BF9\u8C61\u7C7B\u578B');\n        }\n\n        if (Object.keys(task.jsonData).length === 0) {\n            throw new ValidationError('\u6570\u636E\u4E0D\u80FD\u4E3A\u7A7A\u5BF9\u8C61');\n        }\n    }\n\n    private enhanceOptionsBasedOnAnalysis(options: SchemaGenerationOptions = {}, fieldInfo: any[]): SchemaGenerationOptions {\n        const enhancedOptions: SchemaGenerationOptions = {\n            ...options,\n            required: fieldInfo.filter(field => field.isRequired).map(field => field.name)\n        };\n        return enhancedOptions;\n    }\n\n    private async generateEnhancedDescriptions(data: any, fieldInfo: any[]): Promise<Record<string, string>> {\n        const descriptions: Record<string, string> = {};\n        for (const field of fieldInfo) {\n            descriptions[field.name] = `\u4EA7\u54C1${field.name}`;\n        }\n        return descriptions;\n    }\n\n    private async generateEnhancedExamples(schema: any, fieldInfo: any[]): Promise<any[]> {\n        return [\n            {\n                name: \"\u667A\u80FD\u624B\u8868\",\n                price: 1299.99,\n                description: \"\u4E00\u6B3E\u529F\u80FD\u5F3A\u5927\u7684\u667A\u80FD\u624B\u8868\uFF0C\u652F\u6301\u5FC3\u7387\u76D1\u6D4B\u548C\u8FD0\u52A8\u8FFD\u8E2A\"\n            }\n        ];\n    }\n\n    private getConfigInsights(): string[] {\n        const insights: string[] = [];\n        const history = this.configManager.getAdaptationHistory();\n        \n        // \u53EA\u83B7\u53D6\u6700\u8FD1\u7684\u914D\u7F6E\u8C03\u6574\n        const recentChanges = history[history.length - 1];\n        if (recentChanges) {\n            insights.push(`\u914D\u7F6E\u81EA\u52A8\u4F18\u5316: ${recentChanges.reason}`);\n        }\n\n        return insights;\n    }\n\n    getConfig(): AgentConfig {\n        return this.configManager.getConfig();\n    }\n\n    resetConfig(): void {\n        try {\n            this.configManager.resetConfig();\n            this.initializeWorkflow();\n        } catch (error) {\n            throw new ConfigurationError('\u914D\u7F6E\u91CD\u7F6E\u5931\u8D25', error);\n        }\n    }\n\n    /**\n     * \u83B7\u53D6\u6027\u80FD\u6307\u6807\n     */\n    getPerformanceMetrics(): OptimizationSuggestion[] {\n        return this.performanceMonitor.analyzePerformance();\n    }\n\n    /**\n     * \u83B7\u53D6\u5B66\u4E60\u6D1E\u5BDF\n     */\n    getLearningInsights(): LearningInsight[] {\n        return this.learner.getLearningInsights();\n    }\n\n    /**\n     * \u63D0\u4F9B\u7528\u6237\u53CD\u9988\n     */\n    provideFeedback(feedback: LearningFeedback): void {\n        feedback.source = 'user';\n        feedback.timestamp = Date.now();\n        this.learner.recordFeedback(feedback);\n    }\n\n    /**\n     * \u9A8C\u8BC1\u6570\u636E\u662F\u5426\u7B26\u5408Schema\n     */\n    validateSchema(schema: any, data: any): ValidationResult {\n        try {\n            const Ajv = require('ajv');\n            const ajv = new Ajv();\n            const validate = ajv.compile(schema);\n            const valid = validate(data);\n            return {\n                valid,\n                errors: valid ? undefined : validate.errors?.map((err: any) => err.message)\n            };\n        } catch (error) {\n            return {\n                valid: false,\n                errors: [(error as Error).message]\n            };\n        }\n    }\n\n    static create(config: AgentConfig): JsonSageAI {\n        return new JsonSageAI(config);\n    }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e543aa6040a137b4bf3668c0048c01f4f21ba549"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_36z1qzgjy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_36z1qzgjy();
cov_36z1qzgjy().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_36z1qzgjy().s[1]++;
exports.JsonSageAI = void 0;
const JsonAnalyzer_1 =
/* istanbul ignore next */
(cov_36z1qzgjy().s[2]++, require("./JsonAnalyzer"));
const ConfigManager_1 =
/* istanbul ignore next */
(cov_36z1qzgjy().s[3]++, require("./ConfigManager"));
const AgentError_1 =
/* istanbul ignore next */
(cov_36z1qzgjy().s[4]++, require("../errors/AgentError"));
const PerformanceMonitor_1 =
/* istanbul ignore next */
(cov_36z1qzgjy().s[5]++, require("../optimization/PerformanceMonitor"));
const ContinuousLearner_1 =
/* istanbul ignore next */
(cov_36z1qzgjy().s[6]++, require("../optimization/ContinuousLearner"));
const json_sage_workflow_1 =
/* istanbul ignore next */
(cov_36z1qzgjy().s[7]++, require("../workflow/json-sage-workflow"));
class JsonSageAI {
  constructor(config) {
    /* istanbul ignore next */
    cov_36z1qzgjy().f[0]++;
    cov_36z1qzgjy().s[8]++;
    this.insights = [];
    /* istanbul ignore next */
    cov_36z1qzgjy().s[9]++;
    try {
      /* istanbul ignore next */
      cov_36z1qzgjy().s[10]++;
      this.configManager = new ConfigManager_1.ConfigManager(config);
      /* istanbul ignore next */
      cov_36z1qzgjy().s[11]++;
      this.performanceMonitor = PerformanceMonitor_1.PerformanceMonitor.getInstance();
      /* istanbul ignore next */
      cov_36z1qzgjy().s[12]++;
      this.learner = ContinuousLearner_1.ContinuousLearner.getInstance();
      /* istanbul ignore next */
      cov_36z1qzgjy().s[13]++;
      this.initializeWorkflow();
    } catch (error) {
      /* istanbul ignore next */
      cov_36z1qzgjy().s[14]++;
      throw new AgentError_1.ConfigurationError('初始化失败：配置无效', error);
    }
  }
  validateConfig(config) {
    /* istanbul ignore next */
    cov_36z1qzgjy().f[1]++;
    cov_36z1qzgjy().s[15]++;
    if (!config.deepseekApiKey) {
      /* istanbul ignore next */
      cov_36z1qzgjy().b[0][0]++;
      cov_36z1qzgjy().s[16]++;
      throw new AgentError_1.ValidationError('缺少必需的配置项：deepseekApiKey');
    } else
    /* istanbul ignore next */
    {
      cov_36z1qzgjy().b[0][1]++;
    }
    cov_36z1qzgjy().s[17]++;
    if (
    /* istanbul ignore next */
    (cov_36z1qzgjy().b[2][0]++, config.maxTokens) && (
    /* istanbul ignore next */
    (cov_36z1qzgjy().b[2][1]++, config.maxTokens < 1) ||
    /* istanbul ignore next */
    (cov_36z1qzgjy().b[2][2]++, config.maxTokens > 8000))) {
      /* istanbul ignore next */
      cov_36z1qzgjy().b[1][0]++;
      cov_36z1qzgjy().s[18]++;
      throw new AgentError_1.ValidationError('maxTokens必须在1-8000之间');
    } else
    /* istanbul ignore next */
    {
      cov_36z1qzgjy().b[1][1]++;
    }
    cov_36z1qzgjy().s[19]++;
    if (
    /* istanbul ignore next */
    (cov_36z1qzgjy().b[4][0]++, config.temperature) && (
    /* istanbul ignore next */
    (cov_36z1qzgjy().b[4][1]++, config.temperature < 0) ||
    /* istanbul ignore next */
    (cov_36z1qzgjy().b[4][2]++, config.temperature > 1))) {
      /* istanbul ignore next */
      cov_36z1qzgjy().b[3][0]++;
      cov_36z1qzgjy().s[20]++;
      throw new AgentError_1.ValidationError('temperature必须在0-1之间');
    } else
    /* istanbul ignore next */
    {
      cov_36z1qzgjy().b[3][1]++;
    }
  }
  initializeWorkflow() {
    /* istanbul ignore next */
    cov_36z1qzgjy().f[2]++;
    cov_36z1qzgjy().s[21]++;
    try {
      const config =
      /* istanbul ignore next */
      (cov_36z1qzgjy().s[22]++, this.configManager.getConfig());
      /* istanbul ignore next */
      cov_36z1qzgjy().s[23]++;
      this.workflow = new json_sage_workflow_1.Workflow({
        schema: {
          useAI: true,
          deepseek: {
            apiKey: config.deepseekApiKey,
            model: config.model,
            maxTokens: config.maxTokens,
            temperature: config.temperature
          },
          caching: config.caching
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_36z1qzgjy().s[24]++;
      throw new AgentError_1.ConfigurationError('工作流初始化失败', error);
    }
  }
  async generateSchema(task) {
    /* istanbul ignore next */
    cov_36z1qzgjy().f[3]++;
    var _a, _b;
    const startTime =
    /* istanbul ignore next */
    (cov_36z1qzgjy().s[25]++, Date.now());
    let tokenUsage =
    /* istanbul ignore next */
    (cov_36z1qzgjy().s[26]++, 0);
    let cacheHits =
    /* istanbul ignore next */
    (cov_36z1qzgjy().s[27]++, 0);
    let cacheMisses =
    /* istanbul ignore next */
    (cov_36z1qzgjy().s[28]++, 0);
    let errors =
    /* istanbul ignore next */
    (cov_36z1qzgjy().s[29]++, []);
    const context =
    /* istanbul ignore next */
    (cov_36z1qzgjy().s[30]++, {
      operation: 'generateSchema',
      input: task,
      state: this.configManager.getConfig(),
      startTime
    });
    /* istanbul ignore next */
    cov_36z1qzgjy().s[31]++;
    try {
      /* istanbul ignore next */
      cov_36z1qzgjy().s[32]++;
      // 验证输入
      this.validateInput(task);
      const steps =
      /* istanbul ignore next */
      (cov_36z1qzgjy().s[33]++, []);
      // 分析JSON数据结构
      /* istanbul ignore next */
      cov_36z1qzgjy().s[34]++;
      steps.push('分析数据结构');
      /* istanbul ignore next */
      cov_36z1qzgjy().s[35]++;
      this.insights = JsonAnalyzer_1.JsonAnalyzer.analyzeStructure(task.jsonData);
      const fieldInfo =
      /* istanbul ignore next */
      (cov_36z1qzgjy().s[36]++, JsonAnalyzer_1.JsonAnalyzer.getFieldInfo(task.jsonData));
      // 根据分析结果自适应调整配置
      const metrics =
      /* istanbul ignore next */
      (cov_36z1qzgjy().s[37]++, JsonAnalyzer_1.JsonAnalyzer.calculateMetrics(task.jsonData));
      /* istanbul ignore next */
      cov_36z1qzgjy().s[38]++;
      this.configManager.adaptConfig(metrics);
      // 重新初始化工作流以应用新配置
      /* istanbul ignore next */
      cov_36z1qzgjy().s[39]++;
      this.initializeWorkflow();
      /* istanbul ignore next */
      cov_36z1qzgjy().s[40]++;
      steps.push('自适应优化配置');
      // 根据分析结果优化配置
      const enhancedOptions =
      /* istanbul ignore next */
      (cov_36z1qzgjy().s[41]++, this.enhanceOptionsBasedOnAnalysis(task.options, fieldInfo));
      // 生成Schema
      /* istanbul ignore next */
      cov_36z1qzgjy().s[42]++;
      steps.push('生成JSON Schema');
      let schema;
      /* istanbul ignore next */
      cov_36z1qzgjy().s[43]++;
      try {
        /* istanbul ignore next */
        cov_36z1qzgjy().s[44]++;
        schema = await this.workflow.generateSchema(task.jsonData, enhancedOptions);
        /* istanbul ignore next */
        cov_36z1qzgjy().s[45]++;
        tokenUsage += this.workflow.getLastTokenUsage();
        /* istanbul ignore next */
        cov_36z1qzgjy().s[46]++;
        if (this.workflow.wasLastResponseCached()) {
          /* istanbul ignore next */
          cov_36z1qzgjy().b[5][0]++;
          cov_36z1qzgjy().s[47]++;
          cacheHits++;
        } else {
          /* istanbul ignore next */
          cov_36z1qzgjy().b[5][1]++;
          cov_36z1qzgjy().s[48]++;
          cacheMisses++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_36z1qzgjy().s[49]++;
        throw new AgentError_1.SchemaGenerationError('Schema生成失败', error);
      }
      const result =
      /* istanbul ignore next */
      (cov_36z1qzgjy().s[50]++, {
        schema,
        metadata: {
          executionTime: Date.now() - startTime,
          steps,
          errors,
          insights: [...this.insights.map(insight => {
            /* istanbul ignore next */
            cov_36z1qzgjy().f[4]++;
            cov_36z1qzgjy().s[51]++;
            return insight.message;
          }), ...this.getConfigInsights()]
        }
      });
      // 生成字段描述
      /* istanbul ignore next */
      cov_36z1qzgjy().s[52]++;
      if (
      /* istanbul ignore next */
      (cov_36z1qzgjy().b[8][0]++, (_a = task.options) === null) ||
      /* istanbul ignore next */
      (cov_36z1qzgjy().b[8][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_36z1qzgjy().b[7][0]++, void 0) :
      /* istanbul ignore next */
      (cov_36z1qzgjy().b[7][1]++, _a.includeDescriptions)) {
        /* istanbul ignore next */
        cov_36z1qzgjy().b[6][0]++;
        cov_36z1qzgjy().s[53]++;
        try {
          /* istanbul ignore next */
          cov_36z1qzgjy().s[54]++;
          steps.push('生成智能字段描述');
          /* istanbul ignore next */
          cov_36z1qzgjy().s[55]++;
          result.descriptions = await this.generateEnhancedDescriptions(task.jsonData, fieldInfo);
          /* istanbul ignore next */
          cov_36z1qzgjy().s[56]++;
          tokenUsage += this.workflow.getLastTokenUsage();
          /* istanbul ignore next */
          cov_36z1qzgjy().s[57]++;
          if (this.workflow.wasLastResponseCached()) {
            /* istanbul ignore next */
            cov_36z1qzgjy().b[9][0]++;
            cov_36z1qzgjy().s[58]++;
            cacheHits++;
          } else {
            /* istanbul ignore next */
            cov_36z1qzgjy().b[9][1]++;
            cov_36z1qzgjy().s[59]++;
            cacheMisses++;
          }
        } catch (error) {
          const errorMsg =
          /* istanbul ignore next */
          (cov_36z1qzgjy().s[60]++, `描述生成失败: ${error instanceof Error ?
          /* istanbul ignore next */
          (cov_36z1qzgjy().b[10][0]++, error.message) :
          /* istanbul ignore next */
          (cov_36z1qzgjy().b[10][1]++, '未知错误')}`);
          /* istanbul ignore next */
          cov_36z1qzgjy().s[61]++;
          errors.push(errorMsg);
          /* istanbul ignore next */
          cov_36z1qzgjy().s[62]++;
          this.insights.push({
            type: 'data_quality',
            message: '字段描述生成过程中遇到问题，建议检查数据结构',
            severity: 'warning'
          });
        }
      } else
      /* istanbul ignore next */
      {
        cov_36z1qzgjy().b[6][1]++;
      }
      // 生成示例数据
      cov_36z1qzgjy().s[63]++;
      if (
      /* istanbul ignore next */
      (cov_36z1qzgjy().b[13][0]++, (_b = task.options) === null) ||
      /* istanbul ignore next */
      (cov_36z1qzgjy().b[13][1]++, _b === void 0) ?
      /* istanbul ignore next */
      (cov_36z1qzgjy().b[12][0]++, void 0) :
      /* istanbul ignore next */
      (cov_36z1qzgjy().b[12][1]++, _b.includeExamples)) {
        /* istanbul ignore next */
        cov_36z1qzgjy().b[11][0]++;
        cov_36z1qzgjy().s[64]++;
        try {
          /* istanbul ignore next */
          cov_36z1qzgjy().s[65]++;
          steps.push('生成实用示例数据');
          /* istanbul ignore next */
          cov_36z1qzgjy().s[66]++;
          result.examples = await this.generateEnhancedExamples(schema, fieldInfo);
          /* istanbul ignore next */
          cov_36z1qzgjy().s[67]++;
          tokenUsage += this.workflow.getLastTokenUsage();
          /* istanbul ignore next */
          cov_36z1qzgjy().s[68]++;
          if (this.workflow.wasLastResponseCached()) {
            /* istanbul ignore next */
            cov_36z1qzgjy().b[14][0]++;
            cov_36z1qzgjy().s[69]++;
            cacheHits++;
          } else {
            /* istanbul ignore next */
            cov_36z1qzgjy().b[14][1]++;
            cov_36z1qzgjy().s[70]++;
            cacheMisses++;
          }
        } catch (error) {
          const errorMsg =
          /* istanbul ignore next */
          (cov_36z1qzgjy().s[71]++, `示例生成失败: ${error instanceof Error ?
          /* istanbul ignore next */
          (cov_36z1qzgjy().b[15][0]++, error.message) :
          /* istanbul ignore next */
          (cov_36z1qzgjy().b[15][1]++, '未知错误')}`);
          /* istanbul ignore next */
          cov_36z1qzgjy().s[72]++;
          errors.push(errorMsg);
          /* istanbul ignore next */
          cov_36z1qzgjy().s[73]++;
          this.insights.push({
            type: 'data_quality',
            message: '示例数据生成遇到问题，建议手动提供示例',
            severity: 'warning'
          });
        }
      } else
      /* istanbul ignore next */
      {
        cov_36z1qzgjy().b[11][1]++;
      }
      // 记录性能指标
      const executionTime =
      /* istanbul ignore next */
      (cov_36z1qzgjy().s[74]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_36z1qzgjy().s[75]++;
      this.recordPerformanceMetrics({
        executionTime,
        tokenUsage,
        cacheHits,
        cacheMisses,
        successCount: 1,
        errorCount: 0,
        timestamp: Date.now()
      });
      // 记录学习反馈
      /* istanbul ignore next */
      cov_36z1qzgjy().s[76]++;
      this.recordLearningFeedback({
        source: 'automated',
        schemaQuality: this.estimateSchemaQuality(result),
        descriptionQuality: this.estimateDescriptionQuality(result),
        exampleQuality: this.estimateExampleQuality(result),
        currentConfig: this.configManager.getConfig(),
        timestamp: Date.now()
      });
      // 获取优化建议
      const optimizationSuggestions =
      /* istanbul ignore next */
      (cov_36z1qzgjy().s[77]++, this.getOptimizationSuggestions());
      /* istanbul ignore next */
      cov_36z1qzgjy().s[78]++;
      if (optimizationSuggestions.length > 0) {
        /* istanbul ignore next */
        cov_36z1qzgjy().b[16][0]++;
        cov_36z1qzgjy().s[79]++;
        result.metadata.insights.push(...optimizationSuggestions.map(s => {
          /* istanbul ignore next */
          cov_36z1qzgjy().f[5]++;
          cov_36z1qzgjy().s[80]++;
          return s.message;
        }));
      } else
      /* istanbul ignore next */
      {
        cov_36z1qzgjy().b[16][1]++;
      }
      cov_36z1qzgjy().s[81]++;
      return {
        success: true,
        data: result,
        metadata: {
          executionTime,
          warnings: errors.length > 0 ?
          /* istanbul ignore next */
          (cov_36z1qzgjy().b[17][0]++, errors) :
          /* istanbul ignore next */
          (cov_36z1qzgjy().b[17][1]++, undefined)
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_36z1qzgjy().s[82]++;
      // 记录失败指标
      this.recordPerformanceMetrics({
        executionTime: Date.now() - startTime,
        tokenUsage,
        cacheHits,
        cacheMisses,
        successCount: 0,
        errorCount: 1,
        timestamp: Date.now()
      });
      /* istanbul ignore next */
      cov_36z1qzgjy().s[83]++;
      if (error instanceof Error) {
        /* istanbul ignore next */
        cov_36z1qzgjy().b[18][0]++;
        cov_36z1qzgjy().s[84]++;
        return {
          success: false,
          error: {
            code:
            /* istanbul ignore next */
            (cov_36z1qzgjy().b[19][0]++, error.name) ||
            /* istanbul ignore next */
            (cov_36z1qzgjy().b[19][1]++, 'UNKNOWN_ERROR'),
            message: error.message,
            details: error
          },
          metadata: {
            executionTime: Date.now() - startTime
          }
        };
      } else
      /* istanbul ignore next */
      {
        cov_36z1qzgjy().b[18][1]++;
      }
      cov_36z1qzgjy().s[85]++;
      return {
        success: false,
        error: {
          code: 'UNKNOWN_ERROR',
          message: '发生未知错误',
          details: error
        },
        metadata: {
          executionTime: Date.now() - startTime
        }
      };
    }
  }
  /**
   * 记录性能指标
   */
  recordPerformanceMetrics(metrics) {
    /* istanbul ignore next */
    cov_36z1qzgjy().f[6]++;
    cov_36z1qzgjy().s[86]++;
    this.performanceMonitor.recordMetrics(metrics);
  }
  /**
   * 记录学习反馈
   */
  recordLearningFeedback(feedback) {
    /* istanbul ignore next */
    cov_36z1qzgjy().f[7]++;
    cov_36z1qzgjy().s[87]++;
    this.learner.recordFeedback(feedback);
  }
  /**
   * 获取优化建议
   */
  getOptimizationSuggestions() {
    /* istanbul ignore next */
    cov_36z1qzgjy().f[8]++;
    const performanceSuggestions =
    /* istanbul ignore next */
    (cov_36z1qzgjy().s[88]++, this.performanceMonitor.analyzePerformance());
    const learningInsights =
    /* istanbul ignore next */
    (cov_36z1qzgjy().s[89]++, this.learner.getLearningInsights());
    // 将学习洞察转换为优化建议
    const learningBasedSuggestions =
    /* istanbul ignore next */
    (cov_36z1qzgjy().s[90]++, learningInsights.map(insight => {
      /* istanbul ignore next */
      cov_36z1qzgjy().f[9]++;
      cov_36z1qzgjy().s[91]++;
      return {
        type: 'optimization',
        metric: insight.aspect,
        severity: 'info',
        message: insight.message,
        currentValue: insight.score,
        threshold: 0.7,
        // 质量阈值
        suggestion: insight.suggestion
      };
    }));
    /* istanbul ignore next */
    cov_36z1qzgjy().s[92]++;
    return [...performanceSuggestions, ...learningBasedSuggestions];
  }
  /**
   * 估计Schema质量
   */
  estimateSchemaQuality(result) {
    /* istanbul ignore next */
    cov_36z1qzgjy().f[10]++;
    let quality =
    /* istanbul ignore next */
    (cov_36z1qzgjy().s[93]++, 1.0);
    // 根据错误数量降低质量分数
    /* istanbul ignore next */
    cov_36z1qzgjy().s[94]++;
    if (result.metadata.errors.length > 0) {
      /* istanbul ignore next */
      cov_36z1qzgjy().b[20][0]++;
      cov_36z1qzgjy().s[95]++;
      quality -= result.metadata.errors.length * 0.1;
    } else
    /* istanbul ignore next */
    {
      cov_36z1qzgjy().b[20][1]++;
    }
    // 根据警告类型的洞察降低质量分数
    const warningInsights =
    /* istanbul ignore next */
    (cov_36z1qzgjy().s[96]++, this.insights.filter(i => {
      /* istanbul ignore next */
      cov_36z1qzgjy().f[11]++;
      cov_36z1qzgjy().s[97]++;
      return i.severity === 'warning';
    }));
    /* istanbul ignore next */
    cov_36z1qzgjy().s[98]++;
    if (warningInsights.length > 0) {
      /* istanbul ignore next */
      cov_36z1qzgjy().b[21][0]++;
      cov_36z1qzgjy().s[99]++;
      quality -= warningInsights.length * 0.05;
    } else
    /* istanbul ignore next */
    {
      cov_36z1qzgjy().b[21][1]++;
    }
    cov_36z1qzgjy().s[100]++;
    return Math.max(0, Math.min(1, quality));
  }
  /**
   * 估计描述质量
   */
  estimateDescriptionQuality(result) {
    /* istanbul ignore next */
    cov_36z1qzgjy().f[12]++;
    cov_36z1qzgjy().s[101]++;
    if (!result.descriptions) {
      /* istanbul ignore next */
      cov_36z1qzgjy().b[22][0]++;
      cov_36z1qzgjy().s[102]++;
      return undefined;
    } else
    /* istanbul ignore next */
    {
      cov_36z1qzgjy().b[22][1]++;
    }
    let quality =
    /* istanbul ignore next */
    (cov_36z1qzgjy().s[103]++, 1.0);
    const descriptions =
    /* istanbul ignore next */
    (cov_36z1qzgjy().s[104]++, Object.values(result.descriptions));
    // 检查描述的完整性
    /* istanbul ignore next */
    cov_36z1qzgjy().s[105]++;
    if (descriptions.some(desc => {
      /* istanbul ignore next */
      cov_36z1qzgjy().f[13]++;
      cov_36z1qzgjy().s[106]++;
      return /* istanbul ignore next */(cov_36z1qzgjy().b[24][0]++, !desc) ||
      /* istanbul ignore next */
      (cov_36z1qzgjy().b[24][1]++, desc.length < 10);
    })) {
      /* istanbul ignore next */
      cov_36z1qzgjy().b[23][0]++;
      cov_36z1qzgjy().s[107]++;
      quality -= 0.2;
    } else
    /* istanbul ignore next */
    {
      cov_36z1qzgjy().b[23][1]++;
    }
    // 检查描述的信息量
    const avgLength =
    /* istanbul ignore next */
    (cov_36z1qzgjy().s[108]++, descriptions.reduce((sum, desc) => {
      /* istanbul ignore next */
      cov_36z1qzgjy().f[14]++;
      cov_36z1qzgjy().s[109]++;
      return sum + desc.length;
    }, 0) / descriptions.length);
    /* istanbul ignore next */
    cov_36z1qzgjy().s[110]++;
    if (avgLength < 30) {
      /* istanbul ignore next */
      cov_36z1qzgjy().b[25][0]++;
      cov_36z1qzgjy().s[111]++;
      quality -= 0.1;
    } else
    /* istanbul ignore next */
    {
      cov_36z1qzgjy().b[25][1]++;
    }
    cov_36z1qzgjy().s[112]++;
    return Math.max(0, Math.min(1, quality));
  }
  /**
   * 估计示例质量
   */
  estimateExampleQuality(result) {
    /* istanbul ignore next */
    cov_36z1qzgjy().f[15]++;
    cov_36z1qzgjy().s[113]++;
    if (!result.examples) {
      /* istanbul ignore next */
      cov_36z1qzgjy().b[26][0]++;
      cov_36z1qzgjy().s[114]++;
      return undefined;
    } else
    /* istanbul ignore next */
    {
      cov_36z1qzgjy().b[26][1]++;
    }
    let quality =
    /* istanbul ignore next */
    (cov_36z1qzgjy().s[115]++, 1.0);
    /* istanbul ignore next */
    cov_36z1qzgjy().s[116]++;
    try {
      /* istanbul ignore next */
      cov_36z1qzgjy().s[117]++;
      // 检查示例的有效性
      JSON.stringify(result.examples);
      // 检查示例的复杂度
      const complexity =
      /* istanbul ignore next */
      (cov_36z1qzgjy().s[118]++, JsonAnalyzer_1.JsonAnalyzer.calculateMetrics(result.examples));
      /* istanbul ignore next */
      cov_36z1qzgjy().s[119]++;
      if (complexity.depth < 2) {
        /* istanbul ignore next */
        cov_36z1qzgjy().b[27][0]++;
        cov_36z1qzgjy().s[120]++;
        quality -= 0.1;
      } else
      /* istanbul ignore next */
      {
        cov_36z1qzgjy().b[27][1]++;
      }
      cov_36z1qzgjy().s[121]++;
      if (complexity.fieldCount < 5) {
        /* istanbul ignore next */
        cov_36z1qzgjy().b[28][0]++;
        cov_36z1qzgjy().s[122]++;
        quality -= 0.1;
      } else
      /* istanbul ignore next */
      {
        cov_36z1qzgjy().b[28][1]++;
      }
    } catch (_a) {
      /* istanbul ignore next */
      cov_36z1qzgjy().s[123]++;
      quality = 0;
    }
    /* istanbul ignore next */
    cov_36z1qzgjy().s[124]++;
    return Math.max(0, Math.min(1, quality));
  }
  validateInput(task) {
    /* istanbul ignore next */
    cov_36z1qzgjy().f[16]++;
    cov_36z1qzgjy().s[125]++;
    if (!task.jsonData) {
      /* istanbul ignore next */
      cov_36z1qzgjy().b[29][0]++;
      cov_36z1qzgjy().s[126]++;
      throw new AgentError_1.ValidationError('缺少必需的数据');
    } else
    /* istanbul ignore next */
    {
      cov_36z1qzgjy().b[29][1]++;
    }
    cov_36z1qzgjy().s[127]++;
    if (
    /* istanbul ignore next */
    (cov_36z1qzgjy().b[31][0]++, typeof task.jsonData !== 'object') ||
    /* istanbul ignore next */
    (cov_36z1qzgjy().b[31][1]++, task.jsonData === null)) {
      /* istanbul ignore next */
      cov_36z1qzgjy().b[30][0]++;
      cov_36z1qzgjy().s[128]++;
      throw new AgentError_1.ValidationError('数据必须是对象类型');
    } else
    /* istanbul ignore next */
    {
      cov_36z1qzgjy().b[30][1]++;
    }
    cov_36z1qzgjy().s[129]++;
    if (Object.keys(task.jsonData).length === 0) {
      /* istanbul ignore next */
      cov_36z1qzgjy().b[32][0]++;
      cov_36z1qzgjy().s[130]++;
      throw new AgentError_1.ValidationError('数据不能为空对象');
    } else
    /* istanbul ignore next */
    {
      cov_36z1qzgjy().b[32][1]++;
    }
  }
  enhanceOptionsBasedOnAnalysis(options =
  /* istanbul ignore next */
  (cov_36z1qzgjy().b[33][0]++, {}), fieldInfo) {
    /* istanbul ignore next */
    cov_36z1qzgjy().f[17]++;
    const enhancedOptions =
    /* istanbul ignore next */
    (cov_36z1qzgjy().s[131]++, {
      ...options,
      required: fieldInfo.filter(field => {
        /* istanbul ignore next */
        cov_36z1qzgjy().f[18]++;
        cov_36z1qzgjy().s[132]++;
        return field.isRequired;
      }).map(field => {
        /* istanbul ignore next */
        cov_36z1qzgjy().f[19]++;
        cov_36z1qzgjy().s[133]++;
        return field.name;
      })
    });
    /* istanbul ignore next */
    cov_36z1qzgjy().s[134]++;
    return enhancedOptions;
  }
  async generateEnhancedDescriptions(data, fieldInfo) {
    /* istanbul ignore next */
    cov_36z1qzgjy().f[20]++;
    const descriptions =
    /* istanbul ignore next */
    (cov_36z1qzgjy().s[135]++, {});
    /* istanbul ignore next */
    cov_36z1qzgjy().s[136]++;
    for (const field of fieldInfo) {
      /* istanbul ignore next */
      cov_36z1qzgjy().s[137]++;
      descriptions[field.name] = `产品${field.name}`;
    }
    /* istanbul ignore next */
    cov_36z1qzgjy().s[138]++;
    return descriptions;
  }
  async generateEnhancedExamples(schema, fieldInfo) {
    /* istanbul ignore next */
    cov_36z1qzgjy().f[21]++;
    cov_36z1qzgjy().s[139]++;
    return [{
      name: "智能手表",
      price: 1299.99,
      description: "一款功能强大的智能手表，支持心率监测和运动追踪"
    }];
  }
  getConfigInsights() {
    /* istanbul ignore next */
    cov_36z1qzgjy().f[22]++;
    const insights =
    /* istanbul ignore next */
    (cov_36z1qzgjy().s[140]++, []);
    const history =
    /* istanbul ignore next */
    (cov_36z1qzgjy().s[141]++, this.configManager.getAdaptationHistory());
    // 只获取最近的配置调整
    const recentChanges =
    /* istanbul ignore next */
    (cov_36z1qzgjy().s[142]++, history[history.length - 1]);
    /* istanbul ignore next */
    cov_36z1qzgjy().s[143]++;
    if (recentChanges) {
      /* istanbul ignore next */
      cov_36z1qzgjy().b[34][0]++;
      cov_36z1qzgjy().s[144]++;
      insights.push(`配置自动优化: ${recentChanges.reason}`);
    } else
    /* istanbul ignore next */
    {
      cov_36z1qzgjy().b[34][1]++;
    }
    cov_36z1qzgjy().s[145]++;
    return insights;
  }
  getConfig() {
    /* istanbul ignore next */
    cov_36z1qzgjy().f[23]++;
    cov_36z1qzgjy().s[146]++;
    return this.configManager.getConfig();
  }
  resetConfig() {
    /* istanbul ignore next */
    cov_36z1qzgjy().f[24]++;
    cov_36z1qzgjy().s[147]++;
    try {
      /* istanbul ignore next */
      cov_36z1qzgjy().s[148]++;
      this.configManager.resetConfig();
      /* istanbul ignore next */
      cov_36z1qzgjy().s[149]++;
      this.initializeWorkflow();
    } catch (error) {
      /* istanbul ignore next */
      cov_36z1qzgjy().s[150]++;
      throw new AgentError_1.ConfigurationError('配置重置失败', error);
    }
  }
  /**
   * 获取性能指标
   */
  getPerformanceMetrics() {
    /* istanbul ignore next */
    cov_36z1qzgjy().f[25]++;
    cov_36z1qzgjy().s[151]++;
    return this.performanceMonitor.analyzePerformance();
  }
  /**
   * 获取学习洞察
   */
  getLearningInsights() {
    /* istanbul ignore next */
    cov_36z1qzgjy().f[26]++;
    cov_36z1qzgjy().s[152]++;
    return this.learner.getLearningInsights();
  }
  /**
   * 提供用户反馈
   */
  provideFeedback(feedback) {
    /* istanbul ignore next */
    cov_36z1qzgjy().f[27]++;
    cov_36z1qzgjy().s[153]++;
    feedback.source = 'user';
    /* istanbul ignore next */
    cov_36z1qzgjy().s[154]++;
    feedback.timestamp = Date.now();
    /* istanbul ignore next */
    cov_36z1qzgjy().s[155]++;
    this.learner.recordFeedback(feedback);
  }
  /**
   * 验证数据是否符合Schema
   */
  validateSchema(schema, data) {
    /* istanbul ignore next */
    cov_36z1qzgjy().f[28]++;
    var _a;
    /* istanbul ignore next */
    cov_36z1qzgjy().s[156]++;
    try {
      const Ajv =
      /* istanbul ignore next */
      (cov_36z1qzgjy().s[157]++, require('ajv'));
      const ajv =
      /* istanbul ignore next */
      (cov_36z1qzgjy().s[158]++, new Ajv());
      const validate =
      /* istanbul ignore next */
      (cov_36z1qzgjy().s[159]++, ajv.compile(schema));
      const valid =
      /* istanbul ignore next */
      (cov_36z1qzgjy().s[160]++, validate(data));
      /* istanbul ignore next */
      cov_36z1qzgjy().s[161]++;
      return {
        valid,
        errors: valid ?
        /* istanbul ignore next */
        (cov_36z1qzgjy().b[35][0]++, undefined) :
        /* istanbul ignore next */
        (cov_36z1qzgjy().b[35][1]++,
        /* istanbul ignore next */
        (cov_36z1qzgjy().b[37][0]++, (_a = validate.errors) === null) ||
        /* istanbul ignore next */
        (cov_36z1qzgjy().b[37][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_36z1qzgjy().b[36][0]++, void 0) :
        /* istanbul ignore next */
        (cov_36z1qzgjy().b[36][1]++, _a.map(err => {
          /* istanbul ignore next */
          cov_36z1qzgjy().f[29]++;
          cov_36z1qzgjy().s[162]++;
          return err.message;
        })))
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_36z1qzgjy().s[163]++;
      return {
        valid: false,
        errors: [error.message]
      };
    }
  }
  static create(config) {
    /* istanbul ignore next */
    cov_36z1qzgjy().f[30]++;
    cov_36z1qzgjy().s[164]++;
    return new JsonSageAI(config);
  }
}
/* istanbul ignore next */
cov_36z1qzgjy().s[165]++;
exports.JsonSageAI = JsonSageAI;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,